
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package DeskBackend.Analizadores;

import java_cup.runtime.*;
import DeskBackend.Entidades.EntidadError;
import DeskBackend.Entidades.Herramientas.ListaEnlazada;
import DeskBackend.Entidades.Manejadores.ManejadorArchivoRespuestaEntrada;
import DeskBackend.Entidades.Manejadores.ManejadorErrores;
import DeskBackend.Entidades.Token;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser_Indigo extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Parser_IndigoSym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser_Indigo() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser_Indigo(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser_Indigo(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\221\000\002\002\004\000\002\002\020\000\002\002" +
    "\003\000\002\003\016\000\002\004\004\000\002\004\003" +
    "\000\002\005\015\000\002\005\015\000\002\005\015\000" +
    "\002\005\015\000\002\005\015\000\002\005\015\000\002" +
    "\005\015\000\002\005\015\000\002\005\015\000\002\005" +
    "\015\000\002\005\013\000\002\006\011\000\002\007\011" +
    "\000\002\010\011\000\002\011\011\000\002\012\004\000" +
    "\002\012\003\000\002\013\005\000\002\014\007\000\002" +
    "\014\005\000\002\014\003\000\002\015\003\000\002\015" +
    "\011\000\002\016\004\000\002\016\003\000\002\017\005" +
    "\000\002\020\005\000\002\020\003\000\002\020\003\000" +
    "\002\021\011\000\002\021\011\000\002\021\011\000\002" +
    "\021\011\000\002\022\004\000\002\022\003\000\002\023" +
    "\005\000\002\023\003\000\002\024\007\000\002\025\007" +
    "\000\002\025\003\000\002\026\007\000\002\026\007\000" +
    "\002\027\004\000\002\027\003\000\002\030\005\000\002" +
    "\031\015\000\002\031\013\000\002\031\011\000\002\031" +
    "\003\000\002\032\007\000\002\032\007\000\002\032\007" +
    "\000\002\032\007\000\002\032\011\000\002\032\011\000" +
    "\002\033\004\000\002\033\003\000\002\034\005\000\002" +
    "\034\003\000\002\035\007\000\002\036\004\000\002\036" +
    "\003\000\002\037\005\000\002\040\011\000\002\040\007" +
    "\000\002\040\005\000\002\040\003\000\002\041\007\000" +
    "\002\041\007\000\002\041\007\000\002\041\007\000\002" +
    "\042\004\000\002\042\003\000\002\043\005\000\002\044" +
    "\005\000\002\044\011\000\002\044\003\000\002\045\007" +
    "\000\002\045\011\000\002\045\007\000\002\045\007\000" +
    "\002\045\011\000\002\045\007\000\002\045\007\000\002" +
    "\045\007\000\002\045\007\000\002\045\007\000\002\045" +
    "\007\000\002\046\003\000\002\046\005\000\002\046\005" +
    "\000\002\047\004\000\002\047\003\000\002\050\005\000" +
    "\002\050\003\000\002\051\004\000\002\051\003\000\002" +
    "\052\005\000\002\053\005\000\002\053\003\000\002\054" +
    "\007\000\002\054\007\000\002\055\004\000\002\055\003" +
    "\000\002\056\005\000\002\057\005\000\002\057\007\000" +
    "\002\057\003\000\002\060\003\000\002\060\007\000\002" +
    "\061\005\000\002\062\005\000\002\062\003\000\002\063" +
    "\012\000\002\064\010\000\002\065\003\000\002\065\003" +
    "\000\002\066\006\000\002\066\004\000\002\067\005\000" +
    "\002\067\003\000\002\070\007\000\002\071\005\000\002" +
    "\071\003\000\002\072\005\000\002\073\003\000\002\073" +
    "\002\000\002\074\003\000\002\074\003\000\002\074\003" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\076\003\000\002\076\003\000\002\076\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01eb\000\004\065\005\001\002\000\004\002\uffff\001" +
    "\002\000\004\063\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\004\011\001\002\000" +
    "\004\051\012\001\002\000\006\005\014\006\013\001\002" +
    "\000\004\064\u01df\001\002\000\004\062\015\001\002\000" +
    "\020\012\027\014\030\015\033\016\025\017\032\021\031" +
    "\102\026\001\002\000\004\065\017\001\002\000\004\007" +
    "\020\001\002\000\004\051\021\001\002\000\004\005\022" +
    "\001\002\000\004\063\023\001\002\000\004\064\024\001" +
    "\002\000\006\002\ufffe\065\ufffe\001\002\000\004\051\u01cf" +
    "\001\002\000\004\051\u018a\001\002\000\004\051\u0166\001" +
    "\002\000\004\051\375\001\002\000\004\051\306\001\002" +
    "\000\004\051\162\001\002\000\004\051\034\001\002\000" +
    "\010\013\035\020\036\022\037\001\002\000\004\062\131" +
    "\001\002\000\004\062\071\001\002\000\004\062\040\001" +
    "\002\000\004\064\041\001\002\000\004\060\042\001\002" +
    "\000\004\062\043\001\002\000\004\011\063\001\002\000" +
    "\006\003\047\060\046\001\002\000\010\003\047\057\uffc3" +
    "\060\046\001\002\000\004\062\054\001\002\000\010\003" +
    "\uffc1\057\uffc1\060\uffc1\001\002\000\004\057\051\001\002" +
    "\000\004\061\052\001\002\000\004\065\ufff6\001\002\000" +
    "\004\061\061\001\002\000\004\024\055\001\002\000\004" +
    "\062\056\001\002\000\004\052\057\001\002\000\004\075" +
    "\060\001\002\000\004\061\uffc0\001\002\000\010\003\uffc2" +
    "\057\uffc2\060\uffc2\001\002\000\004\057\uffc4\001\002\000" +
    "\004\051\064\001\002\000\004\022\065\001\002\000\004" +
    "\062\066\001\002\000\004\052\067\001\002\000\004\056" +
    "\070\001\002\000\006\003\uffef\060\uffef\001\002\000\004" +
    "\064\072\001\002\000\004\060\073\001\002\000\004\062" +
    "\075\001\002\000\004\060\104\001\002\000\004\011\076" +
    "\001\002\000\004\051\077\001\002\000\004\020\100\001" +
    "\002\000\004\062\101\001\002\000\004\052\102\001\002" +
    "\000\004\056\103\001\002\000\004\060\uffee\001\002\000" +
    "\006\003\112\062\113\001\002\000\004\057\110\001\002" +
    "\000\006\057\uff9b\060\104\001\002\000\004\057\uff9c\001" +
    "\002\000\004\061\111\001\002\000\004\065\ufff3\001\002" +
    "\000\004\061\uff98\001\002\000\006\022\122\024\121\001" +
    "\002\000\004\054\117\001\002\000\004\061\116\001\002" +
    "\000\006\057\uff9a\060\uff9a\001\002\000\004\062\113\001" +
    "\002\000\004\061\uff99\001\002\000\004\062\126\001\002" +
    "\000\004\062\123\001\002\000\004\052\124\001\002\000" +
    "\004\075\125\001\002\000\006\054\uff96\061\uff96\001\002" +
    "\000\004\052\127\001\002\000\004\075\130\001\002\000" +
    "\006\054\uff97\061\uff97\001\002\000\004\064\132\001\002" +
    "\000\004\060\133\001\002\000\004\062\135\001\002\000" +
    "\006\003\145\060\144\001\002\000\004\010\136\001\002" +
    "\000\004\051\137\001\002\000\004\013\140\001\002\000" +
    "\004\062\141\001\002\000\004\052\142\001\002\000\004" +
    "\056\143\001\002\000\006\003\ufff0\060\ufff0\001\002\000" +
    "\004\062\154\001\002\000\010\003\uffd7\057\uffd7\060\uffd7" +
    "\001\002\000\004\057\151\001\002\000\010\003\145\057" +
    "\uffd9\060\144\001\002\000\004\057\uffda\001\002\000\004" +
    "\061\152\001\002\000\004\065\ufff9\001\002\000\004\061" +
    "\161\001\002\000\004\013\155\001\002\000\004\062\156" +
    "\001\002\000\004\052\157\001\002\000\004\076\160\001" +
    "\002\000\004\061\uffd6\001\002\000\010\003\uffd8\057\uffd8" +
    "\060\uffd8\001\002\000\004\020\163\001\002\000\004\062" +
    "\164\001\002\000\004\064\165\001\002\000\004\060\166" +
    "\001\002\000\004\062\075\001\002\000\004\060\170\001" +
    "\002\000\006\003\177\062\200\001\002\000\004\057\174" +
    "\001\002\000\006\057\uffb3\060\170\001\002\000\004\057" +
    "\uffb4\001\002\000\004\061\175\001\002\000\004\065\ufff4" +
    "\001\002\000\004\054\277\001\002\000\004\061\uffaf\001" +
    "\002\000\030\022\207\024\212\026\204\030\211\033\214" +
    "\034\206\035\205\036\203\037\210\040\213\047\215\001" +
    "\002\000\004\061\202\001\002\000\006\057\uffb2\060\uffb2" +
    "\001\002\000\004\062\274\001\002\000\004\051\265\001" +
    "\002\000\004\062\257\001\002\000\004\062\254\001\002" +
    "\000\004\062\251\001\002\000\004\062\246\001\002\000" +
    "\004\062\234\001\002\000\004\062\231\001\002\000\004" +
    "\062\226\001\002\000\004\062\223\001\002\000\004\051" +
    "\216\001\002\000\004\025\217\001\002\000\004\062\220" +
    "\001\002\000\004\052\221\001\002\000\004\076\222\001" +
    "\002\000\006\054\uffad\061\uffad\001\002\000\004\052\224" +
    "\001\002\000\004\101\225\001\002\000\006\054\uffa9\061" +
    "\uffa9\001\002\000\004\052\227\001\002\000\004\076\230" +
    "\001\002\000\006\054\uffa4\061\uffa4\001\002\000\004\052" +
    "\232\001\002\000\004\075\233\001\002\000\006\054\uffae" +
    "\061\uffae\001\002\000\004\052\235\001\002\000\010\025" +
    "\237\027\236\100\241\001\002\000\004\051\244\001\002" +
    "\000\004\051\242\001\002\000\006\054\uffab\061\uffab\001" +
    "\002\000\006\054\uffa3\061\uffa3\001\002\000\004\026\243" +
    "\001\002\000\006\054\uffa2\061\uffa2\001\002\000\004\026" +
    "\245\001\002\000\006\054\uffa1\061\uffa1\001\002\000\004" +
    "\052\247\001\002\000\004\073\250\001\002\000\006\054" +
    "\uffa5\061\uffa5\001\002\000\004\052\252\001\002\000\004" +
    "\075\253\001\002\000\006\054\uffac\061\uffac\001\002\000" +
    "\004\052\255\001\002\000\004\023\256\001\002\000\006" +
    "\054\uffa8\061\uffa8\001\002\000\004\052\260\001\002\000" +
    "\004\076\262\001\002\000\006\054\uffa7\061\uffa7\001\002" +
    "\000\010\054\uff9d\061\uff9d\072\263\001\002\000\004\076" +
    "\262\001\002\000\006\054\uff9e\061\uff9e\001\002\000\004" +
    "\032\266\001\002\000\004\062\267\001\002\000\004\052" +
    "\270\001\002\000\004\076\272\001\002\000\006\054\uffaa" +
    "\061\uffaa\001\002\000\010\054\uff9f\061\uff9f\076\272\001" +
    "\002\000\006\054\uffa0\061\uffa0\001\002\000\004\052\275" +
    "\001\002\000\004\073\276\001\002\000\006\054\uffa6\061" +
    "\uffa6\001\002\000\006\003\177\062\200\001\002\000\004" +
    "\054\302\001\002\000\004\061\uffb1\001\002\000\006\003" +
    "\177\062\200\001\002\000\004\054\304\001\002\000\006" +
    "\003\177\062\200\001\002\000\006\054\304\061\uffb0\001" +
    "\002\000\004\022\307\001\002\000\004\062\310\001\002" +
    "\000\004\064\311\001\002\000\004\060\312\001\002\000" +
    "\004\062\043\001\002\000\004\060\314\001\002\000\006" +
    "\003\323\062\324\001\002\000\004\057\320\001\002\000" +
    "\006\057\uffd0\060\314\001\002\000\004\057\uffd1\001\002" +
    "\000\004\061\321\001\002\000\004\065\ufff7\001\002\000" +
    "\004\061\374\001\002\000\004\061\uffcb\001\002\000\016" +
    "\013\344\024\340\042\343\046\342\047\345\050\341\001" +
    "\002\000\004\054\326\001\002\000\004\062\324\001\002" +
    "\000\004\054\330\001\002\000\004\062\324\001\002\000" +
    "\004\054\332\001\002\000\004\062\324\001\002\000\006" +
    "\054\334\061\uffcc\001\002\000\004\062\324\001\002\000" +
    "\006\054\336\061\uffcd\001\002\000\004\062\324\001\002" +
    "\000\004\061\uffce\001\002\000\004\062\371\001\002\000" +
    "\004\062\366\001\002\000\004\062\363\001\002\000\004" +
    "\051\356\001\002\000\004\051\351\001\002\000\004\062" +
    "\346\001\002\000\004\052\347\001\002\000\004\076\350" +
    "\001\002\000\006\054\uffc8\061\uffc8\001\002\000\004\043" +
    "\352\001\002\000\004\062\353\001\002\000\004\052\354" +
    "\001\002\000\004\076\355\001\002\000\006\054\uffc6\061" +
    "\uffc6\001\002\000\004\043\357\001\002\000\004\062\360" +
    "\001\002\000\004\052\361\001\002\000\004\074\362\001" +
    "\002\000\006\054\uffc5\061\uffc5\001\002\000\004\052\364" +
    "\001\002\000\004\076\272\001\002\000\006\054\uffc9\061" +
    "\uffc9\001\002\000\004\052\367\001\002\000\004\077\370" +
    "\001\002\000\006\054\uffc7\061\uffc7\001\002\000\004\052" +
    "\372\001\002\000\004\075\373\001\002\000\006\054\uffca" +
    "\061\uffca\001\002\000\006\057\uffcf\060\uffcf\001\002\000" +
    "\010\013\377\020\376\022\u0100\001\002\000\004\062\u014d" +
    "\001\002\000\004\062\u0126\001\002\000\004\062\u0101\001" +
    "\002\000\004\064\u0102\001\002\000\004\060\u0103\001\002" +
    "\000\004\062\043\001\002\000\004\060\u0105\001\002\000" +
    "\006\003\u010c\062\u010d\001\002\000\006\057\uffbe\060\u0105" +
    "\001\002\000\004\057\u0108\001\002\000\004\061\u0109\001" +
    "\002\000\004\065\ufff5\001\002\000\004\057\uffbf\001\002" +
    "\000\004\054\u0120\001\002\000\004\061\uffb9\001\002\000" +
    "\012\024\u0110\046\u0112\047\u0113\050\u0111\001\002\000\004" +
    "\061\u010f\001\002\000\006\057\uffbd\060\uffbd\001\002\000" +
    "\004\062\u011d\001\002\000\004\062\u011a\001\002\000\004" +
    "\062\u0117\001\002\000\004\062\u0114\001\002\000\004\052" +
    "\u0115\001\002\000\004\076\u0116\001\002\000\006\054\uffb6" +
    "\061\uffb6\001\002\000\004\052\u0118\001\002\000\004\076" +
    "\272\001\002\000\006\054\uffb7\061\uffb7\001\002\000\004" +
    "\052\u011b\001\002\000\004\077\u011c\001\002\000\006\054" +
    "\uffb5\061\uffb5\001\002\000\004\052\u011e\001\002\000\004" +
    "\075\u011f\001\002\000\006\054\uffb8\061\uffb8\001\002\000" +
    "\004\062\u010d\001\002\000\006\054\u0122\061\uffba\001\002" +
    "\000\004\062\u010d\001\002\000\006\054\u0124\061\uffbb\001" +
    "\002\000\004\062\u010d\001\002\000\004\061\uffbc\001\002" +
    "\000\004\064\u0127\001\002\000\004\060\u0128\001\002\000" +
    "\004\062\135\001\002\000\004\060\u012a\001\002\000\006" +
    "\003\u0131\062\u0132\001\002\000\006\057\uffe3\060\u012a\001" +
    "\002\000\004\057\u012d\001\002\000\004\061\u012e\001\002" +
    "\000\004\065\ufffa\001\002\000\004\057\uffe4\001\002\000" +
    "\004\061\u014c\001\002\000\004\061\uffdf\001\002\000\010" +
    "\013\u0137\021\u0138\042\u0136\001\002\000\006\054\u0134\061" +
    "\uffe0\001\002\000\006\003\u0131\062\u0132\001\002\000\004" +
    "\061\uffe1\001\002\000\004\051\u0147\001\002\000\004\051" +
    "\u013e\001\002\000\004\051\u0139\001\002\000\004\041\u013a" +
    "\001\002\000\004\062\u013b\001\002\000\004\052\u013c\001" +
    "\002\000\004\076\u013d\001\002\000\006\054\uffdc\061\uffdc" +
    "\001\002\000\006\021\u013f\044\u0140\001\002\000\004\062" +
    "\u0144\001\002\000\004\062\u0141\001\002\000\004\052\u0142" +
    "\001\002\000\004\076\u0143\001\002\000\006\054\uffde\061" +
    "\uffde\001\002\000\004\052\u0145\001\002\000\004\076\u0146" +
    "\001\002\000\006\054\uffdd\061\uffdd\001\002\000\004\045" +
    "\u0148\001\002\000\004\062\u0149\001\002\000\004\052\u014a" +
    "\001\002\000\004\074\u014b\001\002\000\006\054\uffdb\061" +
    "\uffdb\001\002\000\006\057\uffe2\060\uffe2\001\002\000\004" +
    "\064\u014e\001\002\000\004\060\u014f\001\002\000\004\062" +
    "\075\001\002\000\004\060\u0151\001\002\000\006\003\u0158" +
    "\062\u0159\001\002\000\006\057\uff94\060\u0151\001\002\000" +
    "\004\057\u0154\001\002\000\004\061\u0155\001\002\000\004" +
    "\065\ufff2\001\002\000\004\057\uff95\001\002\000\006\054" +
    "\uff8f\061\uff8f\001\002\000\004\061\uff90\001\002\000\032" +
    "\022\207\024\212\026\204\030\211\031\u0162\033\214\034" +
    "\206\035\205\036\203\037\210\040\213\047\215\001\002" +
    "\000\004\061\u0161\001\002\000\004\054\u015c\001\002\000" +
    "\006\003\u0158\062\u0159\001\002\000\004\061\uff92\001\002" +
    "\000\004\054\u015f\001\002\000\006\003\u0158\062\u0159\001" +
    "\002\000\006\054\u015f\061\uff91\001\002\000\006\057\uff93" +
    "\060\uff93\001\002\000\004\062\u0163\001\002\000\004\052" +
    "\u0164\001\002\000\004\073\u0165\001\002\000\006\054\uff8e" +
    "\061\uff8e\001\002\000\004\013\u0167\001\002\000\004\062" +
    "\u0168\001\002\000\004\064\u0169\001\002\000\004\060\u016a" +
    "\001\002\000\004\062\135\001\002\000\004\060\u016c\001" +
    "\002\000\006\003\u0172\062\u0174\001\002\000\006\057\uffeb" +
    "\060\u016c\001\002\000\004\057\u016f\001\002\000\004\061" +
    "\u0170\001\002\000\004\065\ufffb\001\002\000\004\057\uffec" +
    "\001\002\000\004\061\uffe7\001\002\000\004\054\u0186\001" +
    "\002\000\010\013\u0179\041\u017a\042\u0178\001\002\000\006" +
    "\054\uffe6\061\uffe6\001\002\000\004\061\u0177\001\002\000" +
    "\006\057\uffea\060\uffea\001\002\000\004\051\u0181\001\002" +
    "\000\004\062\u017e\001\002\000\004\062\u017b\001\002\000" +
    "\004\052\u017c\001\002\000\004\076\u017d\001\002\000\006" +
    "\054\uffd2\061\uffd2\001\002\000\004\052\u017f\001\002\000" +
    "\004\076\u0180\001\002\000\006\054\uffd3\061\uffd3\001\002" +
    "\000\004\043\u0182\001\002\000\004\062\u0183\001\002\000" +
    "\004\052\u0184\001\002\000\004\074\u0185\001\002\000\006" +
    "\054\uffe5\061\uffe5\001\002\000\004\062\u0174\001\002\000" +
    "\006\054\u0188\061\uffe8\001\002\000\004\062\u0174\001\002" +
    "\000\004\061\uffe9\001\002\000\004\103\u018b\001\002\000" +
    "\004\062\u018c\001\002\000\004\064\u018d\001\002\000\004" +
    "\060\u018e\001\002\000\004\062\u018f\001\002\000\004\110" +
    "\u0192\001\002\000\004\061\u0191\001\002\000\004\065\ufff1" +
    "\001\002\000\004\062\u0193\001\002\000\004\064\u0194\001" +
    "\002\000\004\056\u0195\001\002\000\004\060\u0196\001\002" +
    "\000\004\062\u019a\001\002\000\004\057\u0198\001\002\000" +
    "\004\061\uffed\001\002\000\004\061\u01ce\001\002\000\004" +
    "\111\u019e\001\002\000\006\054\u019c\061\uff8b\001\002\000" +
    "\004\062\u019a\001\002\000\004\061\uff8c\001\002\000\004" +
    "\055\u019f\001\002\000\004\073\u01a0\001\002\000\004\052" +
    "\u01a1\001\002\000\004\062\u01a2\001\002\000\004\104\u01a3" +
    "\001\002\000\004\105\u01a6\001\002\000\004\062\u01a5\001" +
    "\002\000\006\054\uff8a\061\uff8a\001\002\000\004\106\u01a7" +
    "\001\002\000\004\053\u01a8\001\002\000\006\075\u01aa\076" +
    "\u01ab\001\002\000\004\056\u01ad\001\002\000\004\056\uff88" +
    "\001\002\000\004\056\uff87\001\002\000\004\062\uff89\001" +
    "\002\000\006\057\u01b0\076\u01af\001\002\000\004\057\u01b3" +
    "\001\002\000\006\054\u01b1\057\uff83\001\002\000\004\062" +
    "\uff85\001\002\000\004\076\u01af\001\002\000\004\057\uff84" +
    "\001\002\000\004\107\u01b4\001\002\000\004\056\u01b6\001" +
    "\002\000\004\062\uff86\001\002\000\006\075\uff7d\114\u01b7" +
    "\001\002\000\004\075\uff7e\001\002\000\004\075\u01ba\001" +
    "\002\000\012\057\u01ca\112\u01c7\113\u01cb\114\u01c6\001\002" +
    "\000\016\064\u01c1\065\u01c0\066\u01be\067\u01bf\070\u01bb\071" +
    "\u01bc\001\002\000\010\073\uff74\074\uff74\076\uff74\001\002" +
    "\000\010\073\uff75\074\uff75\076\uff75\001\002\000\010\073" +
    "\u01c2\074\u01c5\076\u01c3\001\002\000\010\073\uff77\074\uff77" +
    "\076\uff77\001\002\000\010\073\uff76\074\uff76\076\uff76\001" +
    "\002\000\010\073\uff79\074\uff79\076\uff79\001\002\000\010" +
    "\073\uff78\074\uff78\076\uff78\001\002\000\012\057\uff73\112" +
    "\uff73\113\uff73\114\uff73\001\002\000\012\057\uff72\112\uff72" +
    "\113\uff72\114\uff72\001\002\000\012\057\uff7f\112\uff7f\113" +
    "\uff7f\114\uff7f\001\002\000\012\057\uff71\112\uff71\113\uff71" +
    "\114\uff71\001\002\000\004\075\uff7a\001\002\000\004\075" +
    "\uff7c\001\002\000\004\075\u01ba\001\002\000\004\062\uff82" +
    "\001\002\000\004\062\uff80\001\002\000\004\075\uff7b\001" +
    "\002\000\012\057\u01ca\112\u01c7\113\u01cb\114\u01c6\001\002" +
    "\000\004\062\uff81\001\002\000\004\057\uff8d\001\002\000" +
    "\004\013\u01d0\001\002\000\004\062\u01d1\001\002\000\004" +
    "\064\u01d2\001\002\000\004\060\u01d3\001\002\000\004\062" +
    "\135\001\002\000\006\003\u01d7\060\u01d6\001\002\000\004" +
    "\057\u01dd\001\002\000\004\062\u01d9\001\002\000\004\057" +
    "\uffd4\001\002\000\004\054\u01da\001\002\000\006\013\u0179" +
    "\041\u017a\001\002\000\004\062\u01d9\001\002\000\004\061" +
    "\u01dc\001\002\000\004\057\uffd5\001\002\000\004\061\u01de" +
    "\001\002\000\004\065\ufff8\001\002\000\004\065\u01e1\001" +
    "\002\000\004\065\u01e1\001\002\000\004\063\u01e2\001\002" +
    "\000\004\004\u01e3\001\002\000\004\051\u01e4\001\002\000" +
    "\004\005\014\001\002\000\004\065\ufffc\001\002\000\004" +
    "\065\u01e8\001\002\000\004\065\ufffd\001\002\000\004\063" +
    "\u01e9\001\002\000\006\004\u01e3\007\u01ea\001\002\000\004" +
    "\051\u01eb\001\002\000\004\006\u01ec\001\002\000\004\064" +
    "\u01ed\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01eb\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\015\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\043\001\001\000\002\001\001\000" +
    "\006\033\047\034\044\001\001\000\006\033\061\034\044" +
    "\001\001\000\004\035\052\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\073\001\001\000\006\051\104\052\105\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\053\114\054\113\001\001\000\002\001\001\000" +
    "\006\051\106\052\105\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\054\117\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\133\001\001\000\006\022\145\023\146\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\152\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\022\147\023\146\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\166\001\001\000\006\042\170\043\171" +
    "\001\001\000\006\044\200\045\175\001\001\000\002\001" +
    "\001\000\006\042\172\043\171\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\237\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\050\260\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\050\263\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\047\270\001\001\000\002\001\001\000\004\047\272" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\044\300\045\277\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\044\300\045" +
    "\302\001\001\000\002\001\001\000\006\044\300\045\304" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\312" +
    "\001\001\000\006\027\314\030\315\001\001\000\006\031" +
    "\321\032\324\001\001\000\002\001\001\000\006\027\316" +
    "\030\315\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\032\326\001\001\000" +
    "\002\001\001\000\004\032\330\001\001\000\002\001\001" +
    "\000\004\032\332\001\001\000\002\001\001\000\004\032" +
    "\334\001\001\000\002\001\001\000\004\032\336\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\047\364\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\u0103\001\001\000\006\036\u0106" +
    "\037\u0105\001\001\000\006\040\u010d\041\u010a\001\001\000" +
    "\006\036\u0109\037\u0105\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\047" +
    "\u0118\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\041\u0120\001\001\000\002" +
    "\001\001\000\004\041\u0122\001\001\000\002\001\001\000" +
    "\004\041\u0124\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\006\u0128\001\001\000\006\016" +
    "\u012b\017\u012a\001\001\000\006\020\u012f\021\u0132\001\001" +
    "\000\006\016\u012e\017\u012a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\020\u0134\021\u0132\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\u014f" +
    "\001\001\000\006\055\u0152\056\u0151\001\001\000\010\045" +
    "\u0156\057\u0159\060\u015a\001\001\000\006\055\u0155\056\u0151" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\045\u0156\057\u015c\060\u015d\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\045\u0156\057\u015c\060\u015f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\u016a\001\001\000\006\012\u016d\013" +
    "\u016c\001\001\000\010\014\u0175\015\u0172\026\u0174\001\001" +
    "\000\006\012\u0170\013\u016c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\015\u0186\026\u0174\001\001\000\002\001\001\000" +
    "\006\015\u0188\026\u0174\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\u018f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\061\u0196\001\001\000\006" +
    "\062\u0198\063\u019a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\062\u019c\063\u019a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\064\u01a3\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\065\u01a8\001\001\000\004\066\u01ab\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\067\u01ad\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\067\u01b1\001\001\000\002" +
    "\001\001\000\004\070\u01b4\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\073\u01b7\001\001\000\002\001\001" +
    "\000\004\072\u01b8\001\001\000\006\071\u01c8\074\u01c7\001" +
    "\001\000\004\075\u01bc\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\076\u01c3\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\072\u01cb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\071\u01cc\074\u01c7\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\u01d3\001\001" +
    "\000\004\025\u01d4\001\001\000\002\001\001\000\004\026" +
    "\u01d7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\u01da\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u01df\001\001\000\006\003\u01e4\004\u01e5\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\u01e6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser_Indigo$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser_Indigo$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser_Indigo$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private ManejadorArchivoRespuestaEntrada manejadorRespuestas;    
    private ManejadorErrores manejadorErrores;

    public Parser_Indigo (Lexer lexer){//a menos que lo sobreescribas, no es necesario colocarlo, puesto que ya existe este cnstrc y además el lexer hereda de Scanner...
        super(lexer);                         
    }        

    public void estableceManejadorErrores(ManejadorErrores elManejadorErrores){
        manejadorErrores = elManejadorErrores;
        manejadorRespuestas = new ManejadorArchivoRespuestaEntrada(manejadorErrores);
    }

    protected int error_sync_size() {//este es para cb el # de tokens que el parser requiere para recuperarse de los errores
        return 1;
    }     

    public ListaEnlazada<EntidadError> darListadoErrores(){
        return manejadorErrores.darListadoErrores();
    }

    public String darNombreArchivoRespuesta(){
        return manejadorRespuestas.darNombreArchivo();//o dará problema hacer esto, pues se revisa si el listado de errores está vacío para así enviarlo a dicho servlet o JSP xD
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser_Indigo$actions {
  private final Parser_Indigo parser;

  /** Constructor */
  CUP$Parser_Indigo$actions(Parser_Indigo parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser_Indigo$do_action_part00000000(
    int                        CUP$Parser_Indigo$act_num,
    java_cup.runtime.lr_parser CUP$Parser_Indigo$parser,
    java.util.Stack            CUP$Parser_Indigo$stack,
    int                        CUP$Parser_Indigo$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser_Indigo$result;

      /* select the action based on the action number */
      switch (CUP$Parser_Indigo$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= p EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		RESULT = start_val;
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser_Indigo$parser.done_parsing();
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // p ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUDES MAYOR cuerpo Cuerpo MENOR ADMIRACION FIN GUIONBAJO SOLICITUDES MAYOR 
            {
              Object RESULT =null;
		manejadorRespuestas.finalizarArchivo();
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-13)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // p ::= cuerpo 
            {
              Object RESULT =null;
		manejadorRespuestas.finalizarArchivo();
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUD opciones MENOR FIN GUIONBAJO SOLICITUD ADMIRACION MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo",1, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-11)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Cuerpo ::= Cuerpo cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Cuerpo ::= cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // opciones ::= COMILLA CREAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieCreacionUser CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // opciones ::= COMILLA MODIFICAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieModifUser CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // opciones ::= COMILLA ELIMINAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieEliUser CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // opciones ::= COMILLA LOGIN GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user ParamLogin CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // opciones ::= COMILLA NUEVO GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieNuevoForm CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // opciones ::= COMILLA ELIMINAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieEliForm CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // opciones ::= COMILLA MODIFICAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieModifForm CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // opciones ::= COMILLA AGREGAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieAddComp CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // opciones ::= COMILLA ELIMINAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieEliComp CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // opciones ::= COMILLA MODIFICAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieModifComp CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // opciones ::= COMILLA CONSULTAR GUIONBAJO DATOS COMILLA MAYOR APERTURALLAVE b_sqf CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // b_user ::= COMILLA CREDENCIALES GUIONBAJO USUARIO COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_user",4, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // b_form ::= COMILLA PARAMETROS GUIONBAJO FORMULARIO COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_form",5, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // b_comp ::= COMILLA PARAMETROS GUIONBAJO COMPONENTE COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_comp",6, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // b_sqf ::= COMILLA CONSULTAS COMILLA MAYOR APERTURAANGULAR Serie_Consultas CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_sqf",7, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SerieCreacionUser ::= serie_creacion SerieCreacionUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieCreacionUser",8, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SerieCreacionUser ::= serie_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieCreacionUser",8, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // serie_creacion ::= APERTURALLAVE ParamCreacion CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("creacionUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_creacion",9, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ParamCreacion ::= param_creacion COMA param_creacion COMA param_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",10, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ParamCreacion ::= param_creacion COMA param_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",10, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ParamCreacion ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",10, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // param_creacion ::= param_login 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_creacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // param_creacion ::= COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_creacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // SerieModifUser ::= serie_modif_user SerieModifUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifUser",12, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // SerieModifUser ::= serie_modif_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifUser",12, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // serie_modif_user ::= APERTURALLAVE ParamModifUser CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("modificacionUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_user",13, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ParamModifUser ::= param_modif_user COMA ParamModifUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",14, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ParamModifUser ::= param_modif_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",14, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ParamModifUser ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",14, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // param_modif_user ::= COMILLA USUARIO GUIONBAJO ANTIGUO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuarioAntiguo", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // param_modif_user ::= COMILLA USUARIO GUIONBAJO NUEVO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuarioNuevo", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // param_modif_user ::= COMILLA NUEVO GUIONBAJO PASSWORD COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int passwordleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int passwordright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object password = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nuevoPassword", Token.parseToken(password));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // param_modif_user ::= COMILLA FECHA GUIONBAJO MODIFICACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("fechaModificacion", Token.parseToken(fecha));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // SerieEliUser ::= serie_eli_user SerieEliUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliUser",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // SerieEliUser ::= serie_eli_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliUser",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // serie_eli_user ::= APERTURALLAVE param_eli CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("eliminacionUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_user",17, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // serie_eli_user ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributoFaltante", "nombre usuario", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_user",17, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // param_eli ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli",18, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ParamLogin ::= APERTURALLAVE param_login COMA param_login CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("loginUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamLogin",19, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ParamLogin ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosLoginFaltantes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamLogin",19, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // param_login ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_login",20, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // param_login ::= COMILLA PASSWORD COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int passwordleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int passwordright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object password = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("password", Token.parseToken(password));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_login",20, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // SerieNuevoForm ::= serie_nuevo_form SerieNuevoForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieNuevoForm",21, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // SerieNuevoForm ::= serie_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieNuevoForm",21, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // serie_nuevo_form ::= APERTURALLAVE Param_Nuevo_Form CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("creacionFormulario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_nuevo_form",22, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Param_Nuevo_Form ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // param_nuevo_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // param_nuevo_form ::= COMILLA TITULO COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;
		int tituloleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int tituloright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object titulo = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("titulo", Token.parseToken(titulo));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // param_nuevo_form ::= COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // param_nuevo_form ::= COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA 
            {
              Object RESULT =null;
		int temaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int temaright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object tema = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // param_nuevo_form ::= COMILLA USUARIO GUIONBAJO CREACION COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuarioCreacion", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // param_nuevo_form ::= COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // SerieEliForm ::= serie_eli_form SerieEliForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliForm",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // SerieEliForm ::= serie_eli_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliForm",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // serie_eli_form ::= APERTURALLAVE param_eli_form CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("eliminacionFormulario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_form",26, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // serie_eli_form ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributoFaltante", "ID del formulario", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_form",26, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // param_eli_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_form",27, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // SerieModifForm ::= serie_modif_form SerieModifForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifForm",28, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // SerieModifForm ::= serie_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifForm",28, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // serie_modif_form ::= APERTURALLAVE Param_Modif_Form CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("modificacionFormulario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_form",29, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Param_Modif_Form ::= param_modif_form COMA param_modif_form COMA param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Param_Modif_Form ::= param_modif_form COMA param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Param_Modif_Form ::= param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Param_Modif_Form ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // param_modif_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // param_modif_form ::= COMILLA TITULO COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;
		int tituloleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int tituloright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object titulo = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("titulo", Token.parseToken(titulo));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // param_modif_form ::= COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // param_modif_form ::= COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA 
            {
              Object RESULT =null;
		int temaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int temaright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object tema = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // SerieAddComp ::= serie_add_comp SerieAddComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieAddComp",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // SerieAddComp ::= serie_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieAddComp",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // serie_add_comp ::= APERTURALLAVE Param_Add_Comp CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("agregarComponentes");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_add_comp",33, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Param_Add_Comp ::= param_add_comp COMA Param_Add_Comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",34, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Param_Add_Comp ::= param_add_comp COMA param_add_comp COMA param_add_comp COMA param_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",34, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Param_Add_Comp ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atribsFaltantesAddComp", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",34, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // param_add_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // param_add_comp ::= COMILLA NOMBRE GUIONBAJO CAMPO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nombreCampo", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // param_add_comp ::= COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int formularioleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int formularioright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object formulario = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // param_add_comp ::= COMILLA CLASE COMILLA DOSPUNTOS tipoComponente 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // param_add_comp ::= COMILLA TEXTO GUIONBAJO VISIBLE COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // param_add_comp ::= COMILLA ALINEACION COMILLA DOSPUNTOS TIPOALINEACION 
            {
              Object RESULT =null;
		int alineacionleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int alineacionright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object alineacion = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("alineacion", Token.parseToken(alineacion));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // param_add_comp ::= COMILLA REQUERIDO COMILLA DOSPUNTOS TIPOREQUERIDO 
            {
              Object RESULT =null;
		int requerimientoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int requerimientoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object requerimiento = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("requerido", Token.parseToken(requerimiento));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // param_add_comp ::= COMILLA OPCIONES COMILLA DOSPUNTOS items 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // param_add_comp ::= COMILLA FILAS COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;
		int filasleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int filasright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object filas = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("filas", Token.parseToken(filas));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // param_add_comp ::= COMILLA COLUMNAS COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;
		int columnasleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int columnasright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object columnas = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("columnas", Token.parseToken(columnas));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // param_add_comp ::= COMILLA URL COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int urlleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int urlright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object url = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("URL", Token.parseToken(url));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // tipoComponente ::= TIPOCLASE 
            {
              Object RESULT =null;
		int tipoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int tiporight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object tipo = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("clase", Token.parseToken(tipo));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // tipoComponente ::= CAMPO GUIONBAJO TEXTO 
            {
              Object RESULT =null;
		int elementoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).left;
		int elementoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).right;
		Object elemento = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).value;
		Token.parseToken(elemento).reestablecerLexema("campoTexto");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // tipoComponente ::= AREA GUIONBAJO TEXTO 
            {
              Object RESULT =null;
		int elementoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).left;
		int elementoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).right;
		Object elemento = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).value;
		Token.parseToken(elemento).reestablecerLexema("areaTexto");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // cadena ::= ALFANUMERICO cadena 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("textoVisible", Token.parseToken(texto));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cadena",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // cadena ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("textoVisible", Token.parseToken(texto));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cadena",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // items ::= ALFANUMERICO SEPARADOR items 
            {
              Object RESULT =null;
		int opcionesleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).left;
		int opcionesright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).right;
		Object opciones = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).value;
		manejadorRespuestas.agregarAtributo("opciones", Token.parseToken(opciones));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("items",38, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // items ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int opcionesleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int opcionesright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object opciones = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("opciones", Token.parseToken(opciones));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("items",38, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // SerieEliComp ::= serie_eli_comp SerieEliComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliComp",39, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // SerieEliComp ::= serie_eli_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliComp",39, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // serie_eli_comp ::= APERTURALLAVE Param_Eli_Comp CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("eliminarComponente");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_comp",40, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Param_Eli_Comp ::= param_eli_comp COMA param_eli_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Eli_Comp",41, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Param_Eli_Comp ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributoFaltante", "id del componente y del formulario", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Eli_Comp",41, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // param_eli_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_comp",42, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // param_eli_comp ::= COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int formularioleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int formularioright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object formulario = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_comp",42, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // SerieModifComp ::= serie_modif_comp SerieModifComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifComp",43, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // SerieModifComp ::= serie_modif_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifComp",43, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // serie_modif_comp ::= APERTURALLAVE Param_Modif_Comp CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("modificarComponentes");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_comp",44, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Param_Modif_Comp ::= param_modif_comp COMA Param_Modif_Comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",45, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Param_Modif_Comp ::= param_modif_comp COMA param_modif_comp COMA param_modif_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",45, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Param_Modif_Comp ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atribsFaltantesModifComp", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",45, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // param_modif_comp ::= param_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // param_modif_comp ::= COMILLA INDICE COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;
		int indiceleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int indiceright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object indice = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("indice", Token.parseToken(indice));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Serie_Consultas ::= APERTURALLAVE serie_consultas CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Serie_Consultas",47, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // serie_consultas ::= cuerpo_consultas COMA serie_consultas 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_consultas",48, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // serie_consultas ::= cuerpo_consultas 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_consultas",48, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // cuerpo_consultas ::= COMILLA CONSULTA MENOS NUMERO DOSPUNTOS COMILLA bloque_sqf COMILLA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consultas",49, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-7)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // bloque_sqf ::= SELECT TO FORM ASIGNAR identificacion cuerpo_consulta 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("bloque_sqf",50, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-5)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // identificacion ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("identificacion",51, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // identificacion ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("identificacion",51, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // cuerpo_consulta ::= APERTURAANGULAR seleccion CIERREANGULAR condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consulta",52, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-3)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // cuerpo_consulta ::= APERTURAANGULAR CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consulta",52, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // seleccion ::= ALFANUMERICO COMA seleccion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("seleccion",53, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // seleccion ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("seleccion",53, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // condicion ::= WHERE APERTURAANGULAR negacion comparacion Condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("condicion",54, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Condicion ::= logico comparacion Condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Condicion",55, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Condicion ::= CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Condicion",55, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // comparacion ::= IDENTIFICADOR relacional valor 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("comparacion",56, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // negacion ::= NOT 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("negacion",57, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // negacion ::= 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("negacion",57, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // logico ::= AND 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // logico ::= OR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // logico ::= NOT 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // relacional ::= MENOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // relacional ::= MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // relacional ::= IGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // relacional ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // relacional ::= MAYORIGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // relacional ::= MENORIGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // valor ::= NUMERO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // valor ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // valor ::= FORMATOFECHA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser_Indigo$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser_Indigo$do_action(
    int                        CUP$Parser_Indigo$act_num,
    java_cup.runtime.lr_parser CUP$Parser_Indigo$parser,
    java.util.Stack            CUP$Parser_Indigo$stack,
    int                        CUP$Parser_Indigo$top)
    throws java.lang.Exception
    {
              return CUP$Parser_Indigo$do_action_part00000000(
                               CUP$Parser_Indigo$act_num,
                               CUP$Parser_Indigo$parser,
                               CUP$Parser_Indigo$stack,
                               CUP$Parser_Indigo$top);
    }
}

}
