
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package DeskBackend.Analizadores;

import java_cup.runtime.*;
import DeskBackend.Entidades.EntidadError;
import DeskBackend.Entidades.Herramientas.ListaEnlazada;
import DeskBackend.Entidades.Manejadores.ManejadorArchivoRespuestaEntrada;
import DeskBackend.Entidades.Manejadores.ManejadorErrores;
import DeskBackend.Entidades.Token;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser_Indigo extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Parser_IndigoSym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser_Indigo() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser_Indigo(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser_Indigo(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\222\000\002\002\004\000\002\002\020\000\002\002" +
    "\003\000\002\003\017\000\002\004\004\000\002\004\003" +
    "\000\002\005\014\000\002\005\014\000\002\005\014\000" +
    "\002\005\014\000\002\005\014\000\002\005\014\000\002" +
    "\005\014\000\002\005\014\000\002\005\014\000\002\005" +
    "\014\000\002\005\013\000\002\006\004\000\002\007\011" +
    "\000\002\010\011\000\002\011\011\000\002\012\011\000" +
    "\002\013\005\000\002\013\003\000\002\014\005\000\002" +
    "\015\007\000\002\015\005\000\002\015\003\000\002\016" +
    "\003\000\002\016\011\000\002\017\005\000\002\017\003" +
    "\000\002\020\005\000\002\021\005\000\002\021\003\000" +
    "\002\021\003\000\002\022\011\000\002\022\011\000\002" +
    "\022\011\000\002\022\011\000\002\023\005\000\002\023" +
    "\003\000\002\024\005\000\002\024\003\000\002\025\007" +
    "\000\002\026\007\000\002\026\003\000\002\027\007\000" +
    "\002\027\007\000\002\030\005\000\002\030\003\000\002" +
    "\031\005\000\002\032\015\000\002\032\013\000\002\032" +
    "\011\000\002\032\003\000\002\033\007\000\002\033\007" +
    "\000\002\033\007\000\002\033\007\000\002\033\011\000" +
    "\002\033\011\000\002\034\005\000\002\034\003\000\002" +
    "\035\005\000\002\035\003\000\002\036\007\000\002\037" +
    "\005\000\002\037\003\000\002\040\005\000\002\041\011" +
    "\000\002\041\007\000\002\041\005\000\002\041\003\000" +
    "\002\042\007\000\002\042\007\000\002\042\007\000\002" +
    "\042\007\000\002\043\005\000\002\043\003\000\002\044" +
    "\005\000\002\045\005\000\002\045\011\000\002\045\003" +
    "\000\002\046\011\000\002\046\013\000\002\046\011\000" +
    "\002\046\011\000\002\046\013\000\002\046\011\000\002" +
    "\046\011\000\002\046\011\000\002\046\007\000\002\046" +
    "\007\000\002\046\007\000\002\047\003\000\002\047\005" +
    "\000\002\047\005\000\002\050\004\000\002\050\003\000" +
    "\002\051\005\000\002\051\003\000\002\052\005\000\002" +
    "\052\003\000\002\053\005\000\002\054\005\000\002\054" +
    "\003\000\002\055\007\000\002\055\007\000\002\056\005" +
    "\000\002\056\003\000\002\057\005\000\002\060\005\000" +
    "\002\060\007\000\002\060\003\000\002\061\003\000\002" +
    "\061\007\000\002\062\005\000\002\063\005\000\002\063" +
    "\003\000\002\064\012\000\002\065\010\000\002\066\003" +
    "\000\002\066\003\000\002\067\006\000\002\067\004\000" +
    "\002\070\005\000\002\070\003\000\002\071\007\000\002" +
    "\072\005\000\002\072\003\000\002\073\005\000\002\074" +
    "\003\000\002\074\002\000\002\075\003\000\002\075\003" +
    "\000\002\075\003\000\002\076\003\000\002\076\003\000" +
    "\002\076\003\000\002\076\003\000\002\076\003\000\002" +
    "\076\003\000\002\077\003\000\002\077\003\000\002\077" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01fd\000\004\065\005\001\002\000\004\002\uffff\001" +
    "\002\000\004\063\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\004\011\001\002\000" +
    "\004\051\012\001\002\000\006\005\014\006\013\001\002" +
    "\000\004\064\u01f1\001\002\000\004\052\015\001\002\000" +
    "\004\062\016\001\002\000\020\012\030\014\031\015\034" +
    "\016\026\017\033\021\032\102\027\001\002\000\004\065" +
    "\020\001\002\000\004\007\021\001\002\000\004\051\022" +
    "\001\002\000\004\005\023\001\002\000\004\063\024\001" +
    "\002\000\004\064\025\001\002\000\006\002\ufffe\065\ufffe" +
    "\001\002\000\004\051\u01e2\001\002\000\004\051\u019d\001" +
    "\002\000\004\051\u0179\001\002\000\004\051\u0110\001\002" +
    "\000\004\051\331\001\002\000\004\051\165\001\002\000" +
    "\004\051\035\001\002\000\010\013\036\020\037\022\040" +
    "\001\002\000\004\062\134\001\002\000\004\062\074\001" +
    "\002\000\004\062\041\001\002\000\004\064\042\001\002" +
    "\000\004\060\043\001\002\000\004\062\044\001\002\000" +
    "\004\011\066\001\002\000\006\003\050\060\046\001\002" +
    "\000\004\062\060\001\002\000\006\054\055\057\uffc2\001" +
    "\002\000\006\054\uffc0\057\uffc0\001\002\000\004\057\053" +
    "\001\002\000\004\065\ufff6\001\002\000\004\061\054\001" +
    "\002\000\004\065\ufff0\001\002\000\006\003\050\060\046" +
    "\001\002\000\004\057\uffc3\001\002\000\004\061\065\001" +
    "\002\000\004\024\061\001\002\000\004\062\062\001\002" +
    "\000\004\052\063\001\002\000\004\075\064\001\002\000" +
    "\004\061\uffbf\001\002\000\006\054\uffc1\057\uffc1\001\002" +
    "\000\004\051\067\001\002\000\004\022\070\001\002\000" +
    "\004\062\071\001\002\000\004\052\072\001\002\000\004" +
    "\056\073\001\002\000\006\003\uffee\060\uffee\001\002\000" +
    "\004\064\075\001\002\000\004\060\076\001\002\000\004" +
    "\062\100\001\002\000\004\060\107\001\002\000\004\011" +
    "\101\001\002\000\004\051\102\001\002\000\004\020\103" +
    "\001\002\000\004\062\104\001\002\000\004\052\105\001" +
    "\002\000\004\056\106\001\002\000\004\060\uffed\001\002" +
    "\000\006\003\115\062\116\001\002\000\004\057\053\001" +
    "\002\000\006\054\112\057\uff9a\001\002\000\004\060\107" +
    "\001\002\000\004\057\uff9b\001\002\000\004\065\ufff3\001" +
    "\002\000\004\061\uff97\001\002\000\006\022\125\024\124" +
    "\001\002\000\004\054\122\001\002\000\004\061\121\001" +
    "\002\000\006\054\uff99\057\uff99\001\002\000\004\062\116" +
    "\001\002\000\004\061\uff98\001\002\000\004\062\131\001" +
    "\002\000\004\062\126\001\002\000\004\052\127\001\002" +
    "\000\004\075\130\001\002\000\006\054\uff95\061\uff95\001" +
    "\002\000\004\052\132\001\002\000\004\075\133\001\002" +
    "\000\006\054\uff96\061\uff96\001\002\000\004\064\135\001" +
    "\002\000\004\060\136\001\002\000\004\062\140\001\002" +
    "\000\006\003\150\060\147\001\002\000\004\010\141\001" +
    "\002\000\004\051\142\001\002\000\004\013\143\001\002" +
    "\000\004\062\144\001\002\000\004\052\145\001\002\000" +
    "\004\056\146\001\002\000\006\003\uffef\060\uffef\001\002" +
    "\000\004\062\157\001\002\000\006\054\uffd6\057\uffd6\001" +
    "\002\000\004\057\053\001\002\000\006\054\153\057\uffd8" +
    "\001\002\000\006\003\150\060\147\001\002\000\004\057" +
    "\uffd9\001\002\000\004\065\ufff9\001\002\000\004\061\164" +
    "\001\002\000\004\013\160\001\002\000\004\062\161\001" +
    "\002\000\004\052\162\001\002\000\004\076\163\001\002" +
    "\000\004\061\uffd5\001\002\000\006\054\uffd7\057\uffd7\001" +
    "\002\000\004\020\166\001\002\000\004\062\167\001\002" +
    "\000\004\064\170\001\002\000\004\060\171\001\002\000" +
    "\004\062\100\001\002\000\004\060\173\001\002\000\006" +
    "\003\202\062\203\001\002\000\004\057\053\001\002\000" +
    "\006\054\176\057\uffb2\001\002\000\004\060\173\001\002" +
    "\000\004\057\uffb3\001\002\000\004\065\ufff4\001\002\000" +
    "\004\054\322\001\002\000\004\061\uffae\001\002\000\030" +
    "\022\211\024\215\026\207\030\214\033\217\034\212\035" +
    "\210\036\206\037\213\040\216\047\220\001\002\000\004" +
    "\061\205\001\002\000\006\054\uffb1\057\uffb1\001\002\000" +
    "\004\062\317\001\002\000\004\051\310\001\002\000\004" +
    "\062\276\001\002\000\004\062\271\001\002\000\004\062" +
    "\264\001\002\000\004\062\261\001\002\000\004\062\245" +
    "\001\002\000\004\062\240\001\002\000\004\062\235\001" +
    "\002\000\004\062\230\001\002\000\004\051\221\001\002" +
    "\000\004\025\222\001\002\000\004\062\223\001\002\000" +
    "\004\052\224\001\002\000\004\062\225\001\002\000\004" +
    "\076\226\001\002\000\004\062\227\001\002\000\006\054" +
    "\uffac\061\uffac\001\002\000\004\052\231\001\002\000\004" +
    "\062\232\001\002\000\004\101\233\001\002\000\004\062" +
    "\234\001\002\000\006\054\uffa8\061\uffa8\001\002\000\004" +
    "\052\236\001\002\000\004\076\237\001\002\000\006\054" +
    "\uffa3\061\uffa3\001\002\000\004\052\241\001\002\000\004" +
    "\062\242\001\002\000\004\075\243\001\002\000\004\062" +
    "\244\001\002\000\006\054\uffad\061\uffad\001\002\000\004" +
    "\052\246\001\002\000\004\062\247\001\002\000\010\025" +
    "\251\027\250\100\253\001\002\000\004\051\257\001\002" +
    "\000\004\051\255\001\002\000\004\062\254\001\002\000" +
    "\004\062\uffa2\001\002\000\006\054\uffaa\061\uffaa\001\002" +
    "\000\004\026\256\001\002\000\004\062\uffa1\001\002\000" +
    "\004\026\260\001\002\000\004\062\uffa0\001\002\000\004" +
    "\052\262\001\002\000\004\073\263\001\002\000\006\054" +
    "\uffa4\061\uffa4\001\002\000\004\052\265\001\002\000\004" +
    "\062\266\001\002\000\004\023\267\001\002\000\004\062" +
    "\270\001\002\000\006\054\uffa7\061\uffa7\001\002\000\004" +
    "\052\272\001\002\000\004\062\273\001\002\000\004\075" +
    "\274\001\002\000\004\062\275\001\002\000\006\054\uffab" +
    "\061\uffab\001\002\000\004\052\277\001\002\000\004\062" +
    "\300\001\002\000\004\076\303\001\002\000\004\062\307" +
    "\001\002\000\010\062\uff9c\072\304\076\305\001\002\000" +
    "\014\054\uff9e\061\uff9e\062\uff9e\072\uff9e\076\uff9e\001\002" +
    "\000\004\076\303\001\002\000\014\054\uff9f\061\uff9f\062" +
    "\uff9f\072\uff9f\076\uff9f\001\002\000\004\062\uff9d\001\002" +
    "\000\006\054\uffa6\061\uffa6\001\002\000\004\032\311\001" +
    "\002\000\004\062\312\001\002\000\004\052\313\001\002" +
    "\000\004\062\314\001\002\000\004\076\303\001\002\000" +
    "\006\062\316\076\305\001\002\000\006\054\uffa9\061\uffa9" +
    "\001\002\000\004\052\320\001\002\000\004\073\321\001" +
    "\002\000\006\054\uffa5\061\uffa5\001\002\000\006\003\202" +
    "\062\203\001\002\000\004\054\325\001\002\000\004\061" +
    "\uffb0\001\002\000\006\003\202\062\203\001\002\000\004" +
    "\054\327\001\002\000\006\003\202\062\203\001\002\000" +
    "\006\054\327\061\uffaf\001\002\000\004\022\332\001\002" +
    "\000\004\062\333\001\002\000\004\064\334\001\002\000" +
    "\004\060\335\001\002\000\004\062\044\001\002\000\004" +
    "\060\337\001\002\000\006\003\346\062\347\001\002\000" +
    "\004\057\053\001\002\000\006\054\342\057\uffcf\001\002" +
    "\000\004\060\337\001\002\000\004\057\uffd0\001\002\000" +
    "\004\065\ufff7\001\002\000\004\061\u010f\001\002\000\004" +
    "\061\uffca\001\002\000\016\013\367\024\363\042\365\046" +
    "\366\047\370\050\364\001\002\000\004\054\351\001\002" +
    "\000\004\062\347\001\002\000\004\054\353\001\002\000" +
    "\004\062\347\001\002\000\004\054\355\001\002\000\004" +
    "\062\347\001\002\000\006\054\357\061\uffcb\001\002\000" +
    "\004\062\347\001\002\000\006\054\361\061\uffcc\001\002" +
    "\000\004\062\347\001\002\000\004\061\uffcd\001\002\000" +
    "\004\062\u010c\001\002\000\004\062\u0109\001\002\000\004" +
    "\051\u0104\001\002\000\004\062\u0101\001\002\000\004\051" +
    "\374\001\002\000\004\062\371\001\002\000\004\052\372" +
    "\001\002\000\004\076\373\001\002\000\006\054\uffc7\061" +
    "\uffc7\001\002\000\004\043\375\001\002\000\004\062\376" +
    "\001\002\000\004\052\377\001\002\000\004\076\u0100\001" +
    "\002\000\006\054\uffc5\061\uffc5\001\002\000\004\052\u0102" +
    "\001\002\000\004\076\303\001\002\000\010\054\uffc8\061" +
    "\uffc8\076\305\001\002\000\004\043\u0105\001\002\000\004" +
    "\062\u0106\001\002\000\004\052\u0107\001\002\000\004\074" +
    "\u0108\001\002\000\006\054\uffc4\061\uffc4\001\002\000\004" +
    "\052\u010a\001\002\000\004\077\u010b\001\002\000\006\054" +
    "\uffc6\061\uffc6\001\002\000\004\052\u010d\001\002\000\004" +
    "\075\u010e\001\002\000\006\054\uffc9\061\uffc9\001\002\000" +
    "\006\054\uffce\057\uffce\001\002\000\010\013\u0112\020\u0111" +
    "\022\u0113\001\002\000\004\062\u0160\001\002\000\004\062" +
    "\u0139\001\002\000\004\062\u0114\001\002\000\004\064\u0115" +
    "\001\002\000\004\060\u0116\001\002\000\004\062\044\001" +
    "\002\000\004\060\u0118\001\002\000\006\003\u011f\062\u0120" +
    "\001\002\000\006\054\u011c\057\uffbd\001\002\000\004\057" +
    "\053\001\002\000\004\065\ufff5\001\002\000\004\060\u0118" +
    "\001\002\000\004\057\uffbe\001\002\000\004\054\u0133\001" +
    "\002\000\004\061\uffb8\001\002\000\012\024\u0123\046\u0125" +
    "\047\u0126\050\u0124\001\002\000\004\061\u0122\001\002\000" +
    "\006\054\uffbc\057\uffbc\001\002\000\004\062\u0130\001\002" +
    "\000\004\062\u012d\001\002\000\004\062\u012a\001\002\000" +
    "\004\062\u0127\001\002\000\004\052\u0128\001\002\000\004" +
    "\076\u0129\001\002\000\006\054\uffb5\061\uffb5\001\002\000" +
    "\004\052\u012b\001\002\000\004\076\303\001\002\000\010" +
    "\054\uffb6\061\uffb6\076\305\001\002\000\004\052\u012e\001" +
    "\002\000\004\077\u012f\001\002\000\006\054\uffb4\061\uffb4" +
    "\001\002\000\004\052\u0131\001\002\000\004\075\u0132\001" +
    "\002\000\006\054\uffb7\061\uffb7\001\002\000\004\062\u0120" +
    "\001\002\000\006\054\u0135\061\uffb9\001\002\000\004\062" +
    "\u0120\001\002\000\006\054\u0137\061\uffba\001\002\000\004" +
    "\062\u0120\001\002\000\004\061\uffbb\001\002\000\004\064" +
    "\u013a\001\002\000\004\060\u013b\001\002\000\004\062\140" +
    "\001\002\000\004\060\u013d\001\002\000\006\003\u0144\062" +
    "\u0145\001\002\000\006\054\u0141\057\uffe2\001\002\000\004" +
    "\057\053\001\002\000\004\065\ufffa\001\002\000\004\060" +
    "\u013d\001\002\000\004\057\uffe3\001\002\000\004\061\u015f" +
    "\001\002\000\004\061\uffde\001\002\000\010\013\u014a\021" +
    "\u014b\042\u0149\001\002\000\006\054\u0147\061\uffdf\001\002" +
    "\000\006\003\u0144\062\u0145\001\002\000\004\061\uffe0\001" +
    "\002\000\004\051\u015a\001\002\000\004\051\u0151\001\002" +
    "\000\004\051\u014c\001\002\000\004\041\u014d\001\002\000" +
    "\004\062\u014e\001\002\000\004\052\u014f\001\002\000\004" +
    "\076\u0150\001\002\000\006\054\uffdb\061\uffdb\001\002\000" +
    "\006\021\u0152\044\u0153\001\002\000\004\062\u0157\001\002" +
    "\000\004\062\u0154\001\002\000\004\052\u0155\001\002\000" +
    "\004\076\u0156\001\002\000\006\054\uffdd\061\uffdd\001\002" +
    "\000\004\052\u0158\001\002\000\004\076\u0159\001\002\000" +
    "\006\054\uffdc\061\uffdc\001\002\000\004\045\u015b\001\002" +
    "\000\004\062\u015c\001\002\000\004\052\u015d\001\002\000" +
    "\004\074\u015e\001\002\000\006\054\uffda\061\uffda\001\002" +
    "\000\006\054\uffe1\057\uffe1\001\002\000\004\064\u0161\001" +
    "\002\000\004\060\u0162\001\002\000\004\062\100\001\002" +
    "\000\004\060\u0164\001\002\000\006\003\u016b\062\u016c\001" +
    "\002\000\006\054\u0168\057\uff93\001\002\000\004\057\053" +
    "\001\002\000\004\065\ufff2\001\002\000\004\060\u0164\001" +
    "\002\000\004\057\uff94\001\002\000\006\054\uff8e\061\uff8e" +
    "\001\002\000\004\061\uff8f\001\002\000\032\022\211\024" +
    "\215\026\207\030\214\031\u0175\033\217\034\212\035\210" +
    "\036\206\037\213\040\216\047\220\001\002\000\004\061" +
    "\u0174\001\002\000\004\054\u016f\001\002\000\006\003\u016b" +
    "\062\u016c\001\002\000\004\061\uff91\001\002\000\004\054" +
    "\u0172\001\002\000\006\003\u016b\062\u016c\001\002\000\006" +
    "\054\u0172\061\uff90\001\002\000\006\054\uff92\057\uff92\001" +
    "\002\000\004\062\u0176\001\002\000\004\052\u0177\001\002" +
    "\000\004\073\u0178\001\002\000\006\054\uff8d\061\uff8d\001" +
    "\002\000\004\013\u017a\001\002\000\004\062\u017b\001\002" +
    "\000\004\064\u017c\001\002\000\004\060\u017d\001\002\000" +
    "\004\062\140\001\002\000\004\060\u017f\001\002\000\006" +
    "\003\u0185\062\u0188\001\002\000\006\054\u0183\057\uffea\001" +
    "\002\000\004\057\053\001\002\000\004\065\ufffb\001\002" +
    "\000\004\060\u017f\001\002\000\004\057\uffeb\001\002\000" +
    "\004\061\uffe6\001\002\000\006\054\uffe5\061\uffe5\001\002" +
    "\000\004\054\u0199\001\002\000\010\013\u018c\041\u018d\042" +
    "\u018b\001\002\000\004\061\u018a\001\002\000\006\054\uffe9" +
    "\057\uffe9\001\002\000\004\051\u0194\001\002\000\004\062" +
    "\u0191\001\002\000\004\062\u018e\001\002\000\004\052\u018f" +
    "\001\002\000\004\076\u0190\001\002\000\006\054\uffd1\061" +
    "\uffd1\001\002\000\004\052\u0192\001\002\000\004\076\u0193" +
    "\001\002\000\006\054\uffd2\061\uffd2\001\002\000\004\043" +
    "\u0195\001\002\000\004\062\u0196\001\002\000\004\052\u0197" +
    "\001\002\000\004\074\u0198\001\002\000\006\054\uffe4\061" +
    "\uffe4\001\002\000\004\062\u0188\001\002\000\006\054\u019b" +
    "\061\uffe7\001\002\000\004\062\u0188\001\002\000\004\061" +
    "\uffe8\001\002\000\004\103\u019e\001\002\000\004\062\u019f" +
    "\001\002\000\004\064\u01a0\001\002\000\004\060\u01a1\001" +
    "\002\000\004\062\u01a2\001\002\000\004\110\u01a5\001\002" +
    "\000\004\061\u01a4\001\002\000\004\065\ufff1\001\002\000" +
    "\004\062\u01a6\001\002\000\004\064\u01a7\001\002\000\004" +
    "\056\u01a8\001\002\000\004\060\u01a9\001\002\000\004\062" +
    "\u01ad\001\002\000\004\057\u01ab\001\002\000\004\061\uffec" +
    "\001\002\000\004\061\u01e1\001\002\000\004\111\u01b1\001" +
    "\002\000\006\054\u01af\061\uff8a\001\002\000\004\062\u01ad" +
    "\001\002\000\004\061\uff8b\001\002\000\004\055\u01b2\001" +
    "\002\000\004\073\u01b3\001\002\000\004\052\u01b4\001\002" +
    "\000\004\062\u01b5\001\002\000\004\104\u01b6\001\002\000" +
    "\004\105\u01b9\001\002\000\004\062\u01b8\001\002\000\006" +
    "\054\uff89\061\uff89\001\002\000\004\106\u01ba\001\002\000" +
    "\004\053\u01bb\001\002\000\006\075\u01bd\076\u01be\001\002" +
    "\000\004\056\u01c0\001\002\000\004\056\uff87\001\002\000" +
    "\004\056\uff86\001\002\000\004\062\uff88\001\002\000\006" +
    "\057\u01c3\076\u01c2\001\002\000\004\057\u01c6\001\002\000" +
    "\006\054\u01c4\057\uff82\001\002\000\004\062\uff84\001\002" +
    "\000\004\076\u01c2\001\002\000\004\057\uff83\001\002\000" +
    "\004\107\u01c7\001\002\000\004\056\u01c9\001\002\000\004" +
    "\062\uff85\001\002\000\006\075\uff7c\114\u01ca\001\002\000" +
    "\004\075\uff7d\001\002\000\004\075\u01cd\001\002\000\012" +
    "\057\u01dd\112\u01da\113\u01de\114\u01d9\001\002\000\016\064" +
    "\u01d4\065\u01d3\066\u01d1\067\u01d2\070\u01cf\071\u01ce\001\002" +
    "\000\010\073\uff74\074\uff74\076\uff74\001\002\000\010\073" +
    "\uff73\074\uff73\076\uff73\001\002\000\010\073\u01d5\074\u01d8" +
    "\076\u01d6\001\002\000\010\073\uff76\074\uff76\076\uff76\001" +
    "\002\000\010\073\uff75\074\uff75\076\uff75\001\002\000\010" +
    "\073\uff78\074\uff78\076\uff78\001\002\000\010\073\uff77\074" +
    "\uff77\076\uff77\001\002\000\012\057\uff72\112\uff72\113\uff72" +
    "\114\uff72\001\002\000\012\057\uff71\112\uff71\113\uff71\114" +
    "\uff71\001\002\000\012\057\uff7e\112\uff7e\113\uff7e\114\uff7e" +
    "\001\002\000\012\057\uff70\112\uff70\113\uff70\114\uff70\001" +
    "\002\000\004\075\uff79\001\002\000\004\075\uff7b\001\002" +
    "\000\004\075\u01cd\001\002\000\004\062\uff81\001\002\000" +
    "\004\062\uff7f\001\002\000\004\075\uff7a\001\002\000\012" +
    "\057\u01dd\112\u01da\113\u01de\114\u01d9\001\002\000\004\062" +
    "\uff80\001\002\000\004\057\uff8c\001\002\000\004\013\u01e3" +
    "\001\002\000\004\062\u01e4\001\002\000\004\064\u01e5\001" +
    "\002\000\004\060\u01e6\001\002\000\004\062\140\001\002" +
    "\000\006\003\u01ea\060\u01e9\001\002\000\004\057\053\001" +
    "\002\000\004\062\u01ec\001\002\000\004\057\uffd3\001\002" +
    "\000\004\054\u01ed\001\002\000\006\013\u018c\041\u018d\001" +
    "\002\000\004\062\u01ec\001\002\000\004\061\u01ef\001\002" +
    "\000\004\057\uffd4\001\002\000\004\065\ufff8\001\002\000" +
    "\004\065\u01f3\001\002\000\004\065\u01f3\001\002\000\004" +
    "\063\u01f4\001\002\000\004\004\u01f5\001\002\000\004\051" +
    "\u01f6\001\002\000\004\005\014\001\002\000\004\065\ufffc" +
    "\001\002\000\004\065\u01fa\001\002\000\004\065\ufffd\001" +
    "\002\000\004\063\u01fb\001\002\000\006\004\u01f5\007\u01fc" +
    "\001\002\000\004\051\u01fd\001\002\000\004\006\u01fe\001" +
    "\002\000\004\064\u01ff\001\002\000\004\002\000\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01fd\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\016\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\044\001\001\000" +
    "\002\001\001\000\006\034\050\035\046\001\001\000\004" +
    "\036\056\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\051\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\034\055\035\046\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\076\001\001\000\006\052\107\053\110\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\054\117\055\116\001\001\000\004\006\113" +
    "\001\001\000\002\001\001\000\006\052\112\053\110\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\055\122\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\136\001\001\000\006\023\150\024\151" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\025\155\001\001\000\002\001" +
    "\001\000\004\006\154\001\001\000\002\001\001\000\006" +
    "\023\153\024\151\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\171\001\001\000" +
    "\006\043\173\044\174\001\001\000\006\045\203\046\200" +
    "\001\001\000\004\006\177\001\001\000\002\001\001\000" +
    "\006\043\176\044\174\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\047\251\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\050\301" +
    "\051\300\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\050\301\051\305\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\050\314\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\045\323\046\322\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\045\323\046\325\001\001\000\002" +
    "\001\001\000\006\045\323\046\327\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\335\001\001\000\006\030" +
    "\337\031\340\001\001\000\006\032\344\033\347\001\001" +
    "\000\004\006\343\001\001\000\002\001\001\000\006\030" +
    "\342\031\340\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\033\351\001\001\000\002\001\001" +
    "\000\004\033\353\001\001\000\002\001\001\000\004\033" +
    "\355\001\001\000\002\001\001\000\004\033\357\001\001" +
    "\000\002\001\001\000\004\033\361\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\050\u0102" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\u0116\001\001\000\006\037\u0119\040\u0118\001" +
    "\001\000\006\041\u0120\042\u011d\001\001\000\002\001\001" +
    "\000\004\006\u011a\001\001\000\002\001\001\000\006\037" +
    "\u011c\040\u0118\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\050\u012b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\042\u0133\001\001\000\002\001" +
    "\001\000\004\042\u0135\001\001\000\002\001\001\000\004" +
    "\042\u0137\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\u013b\001\001\000\006\017\u013e" +
    "\020\u013d\001\001\000\006\021\u0142\022\u0145\001\001\000" +
    "\002\001\001\000\004\006\u013f\001\001\000\002\001\001" +
    "\000\006\017\u0141\020\u013d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\021\u0147\022\u0145\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u0162\001\001\000\006\056\u0165\057\u0164\001\001\000\010" +
    "\046\u0169\060\u016c\061\u016d\001\001\000\002\001\001\000" +
    "\004\006\u0166\001\001\000\002\001\001\000\006\056\u0168" +
    "\057\u0164\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\046\u0169\060\u016f\061\u0170\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\046\u0169\060\u016f" +
    "\061\u0172\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\007\u017d\001\001\000\006" +
    "\013\u0180\014\u017f\001\001\000\010\015\u0188\016\u0186\027" +
    "\u0185\001\001\000\002\001\001\000\004\006\u0181\001\001" +
    "\000\002\001\001\000\006\013\u0183\014\u017f\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\016\u0199\027\u0185\001\001" +
    "\000\002\001\001\000\006\016\u019b\027\u0185\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\012\u01a2\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\062" +
    "\u01a9\001\001\000\006\063\u01ab\064\u01ad\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\063\u01af\064\u01ad\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\065\u01b6\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\066\u01bb\001\001" +
    "\000\004\067\u01be\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\070\u01c0\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\070" +
    "\u01c4\001\001\000\002\001\001\000\004\071\u01c7\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\074\u01ca\001" +
    "\001\000\002\001\001\000\004\073\u01cb\001\001\000\006" +
    "\072\u01db\075\u01da\001\001\000\004\076\u01cf\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\077\u01d6\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\073\u01de\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\072\u01df\075\u01da\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\u01e6\001\001\000\004\026\u01e7\001\001\000\004" +
    "\006\u01ef\001\001\000\004\027\u01ea\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u01ed" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u01f1\001\001\000\006\003\u01f6\004\u01f7" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\u01f8" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser_Indigo$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser_Indigo$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser_Indigo$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private ManejadorArchivoRespuestaEntrada manejadorRespuestas;    
    private ManejadorErrores manejadorErrores;

    public Parser_Indigo (Lexer lexer){//a menos que lo sobreescribas, no es necesario colocarlo, puesto que ya existe este cnstrc y además el lexer hereda de Scanner...
        super(lexer);                         
    }        

    public void estableceManejadorErrores(ManejadorErrores elManejadorErrores){
        manejadorErrores = elManejadorErrores;
        manejadorRespuestas = new ManejadorArchivoRespuestaEntrada(manejadorErrores);
    }

    protected int error_sync_size() {//este es para cb el # de tokens que el parser requiere para recuperarse de los errores
        return 1;
    }     

    public ListaEnlazada<EntidadError> darListadoErrores(){
        return manejadorErrores.darListadoErrores();
    }

    public String darNombreArchivoRespuesta(){
        return manejadorRespuestas.darNombreArchivo();//o dará problema hacer esto, pues se revisa si el listado de errores está vacío para así enviarlo a dicho servlet o JSP xD
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser_Indigo$actions {
  private final Parser_Indigo parser;

  /** Constructor */
  CUP$Parser_Indigo$actions(Parser_Indigo parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser_Indigo$do_action_part00000000(
    int                        CUP$Parser_Indigo$act_num,
    java_cup.runtime.lr_parser CUP$Parser_Indigo$parser,
    java.util.Stack            CUP$Parser_Indigo$stack,
    int                        CUP$Parser_Indigo$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser_Indigo$result;

      /* select the action based on the action number */
      switch (CUP$Parser_Indigo$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= p EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		RESULT = start_val;
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser_Indigo$parser.done_parsing();
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // p ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUDES MAYOR cuerpo Cuerpo MENOR ADMIRACION FIN GUIONBAJO SOLICITUDES MAYOR 
            {
              Object RESULT =null;
		manejadorRespuestas.finalizarArchivo();
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-13)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // p ::= cuerpo 
            {
              Object RESULT =null;
		manejadorRespuestas.finalizarArchivo();
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUD DOSPUNTOS opciones MENOR FIN GUIONBAJO SOLICITUD ADMIRACION MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo",1, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-12)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Cuerpo ::= Cuerpo cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Cuerpo ::= cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // opciones ::= COMILLA CREAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieCreacionUser cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // opciones ::= COMILLA MODIFICAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieModifUser cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // opciones ::= COMILLA ELIMINAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieEliUser cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // opciones ::= COMILLA LOGIN GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user ParamLogin cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // opciones ::= COMILLA NUEVO GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieNuevoForm cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // opciones ::= COMILLA ELIMINAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieEliForm cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // opciones ::= COMILLA MODIFICAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieModifForm cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // opciones ::= COMILLA AGREGAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieAddComp cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // opciones ::= COMILLA ELIMINAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieEliComp cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // opciones ::= COMILLA MODIFICAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieModifComp cierreOpciones 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-9)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // opciones ::= COMILLA CONSULTAR GUIONBAJO DATOS COMILLA MAYOR APERTURALLAVE b_sqf CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // cierreOpciones ::= CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cierreOpciones",4, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // b_user ::= COMILLA CREDENCIALES GUIONBAJO USUARIO COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_user",5, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // b_form ::= COMILLA PARAMETROS GUIONBAJO FORMULARIO COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_form",6, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // b_comp ::= COMILLA PARAMETROS GUIONBAJO COMPONENTE COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_comp",7, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // b_sqf ::= COMILLA CONSULTAS COMILLA MAYOR APERTURAANGULAR Serie_Consultas CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_sqf",8, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SerieCreacionUser ::= serie_creacion COMA SerieCreacionUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieCreacionUser",9, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SerieCreacionUser ::= serie_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieCreacionUser",9, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // serie_creacion ::= APERTURALLAVE ParamCreacion CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("creacionUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_creacion",10, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ParamCreacion ::= param_creacion COMA param_creacion COMA param_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ParamCreacion ::= param_creacion COMA param_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ParamCreacion ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // param_creacion ::= param_login 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_creacion",12, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // param_creacion ::= COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_creacion",12, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // SerieModifUser ::= serie_modif_user COMA SerieModifUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifUser",13, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // SerieModifUser ::= serie_modif_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifUser",13, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // serie_modif_user ::= APERTURALLAVE ParamModifUser CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("modificacionUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_user",14, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ParamModifUser ::= param_modif_user COMA ParamModifUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ParamModifUser ::= param_modif_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ParamModifUser ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // param_modif_user ::= COMILLA USUARIO GUIONBAJO ANTIGUO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuarioAntiguo", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // param_modif_user ::= COMILLA USUARIO GUIONBAJO NUEVO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuarioNuevo", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // param_modif_user ::= COMILLA NUEVO GUIONBAJO PASSWORD COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int passwordleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int passwordright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object password = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nuevoPassword", Token.parseToken(password));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // param_modif_user ::= COMILLA FECHA GUIONBAJO MODIFICACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("fechaModificacion", Token.parseToken(fecha));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // SerieEliUser ::= serie_eli_user COMA SerieEliUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliUser",17, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // SerieEliUser ::= serie_eli_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliUser",17, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // serie_eli_user ::= APERTURALLAVE param_eli CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("eliminacionUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_user",18, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // serie_eli_user ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributoFaltante", "nombre usuario", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_user",18, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // param_eli ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli",19, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ParamLogin ::= APERTURALLAVE param_login COMA param_login CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("loginUsuario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamLogin",20, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ParamLogin ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosLoginFaltantes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamLogin",20, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // param_login ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_login",21, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // param_login ::= COMILLA PASSWORD COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int passwordleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int passwordright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object password = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("password", Token.parseToken(password));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_login",21, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // SerieNuevoForm ::= serie_nuevo_form COMA SerieNuevoForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieNuevoForm",22, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // SerieNuevoForm ::= serie_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieNuevoForm",22, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // serie_nuevo_form ::= APERTURALLAVE Param_Nuevo_Form CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("creacionFormulario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_nuevo_form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Param_Nuevo_Form ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // param_nuevo_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // param_nuevo_form ::= COMILLA TITULO COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;
		int tituloleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int tituloright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object titulo = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("titulo", Token.parseToken(titulo));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // param_nuevo_form ::= COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // param_nuevo_form ::= COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA 
            {
              Object RESULT =null;
		int temaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int temaright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object tema = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // param_nuevo_form ::= COMILLA USUARIO GUIONBAJO CREACION COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("usuarioCreacion", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // param_nuevo_form ::= COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // SerieEliForm ::= serie_eli_form COMA SerieEliForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliForm",26, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // SerieEliForm ::= serie_eli_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliForm",26, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // serie_eli_form ::= APERTURALLAVE param_eli_form CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("eliminacionFormulario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_form",27, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // serie_eli_form ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributoFaltante", "ID del formulario", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_form",27, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // param_eli_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_form",28, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // SerieModifForm ::= serie_modif_form COMA SerieModifForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifForm",29, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // SerieModifForm ::= serie_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifForm",29, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // serie_modif_form ::= APERTURALLAVE Param_Modif_Form CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("modificacionFormulario");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Param_Modif_Form ::= param_modif_form COMA param_modif_form COMA param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Param_Modif_Form ::= param_modif_form COMA param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Param_Modif_Form ::= param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Param_Modif_Form ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // param_modif_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // param_modif_form ::= COMILLA TITULO COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;
		int tituloleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int tituloright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object titulo = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("titulo", Token.parseToken(titulo));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // param_modif_form ::= COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // param_modif_form ::= COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA 
            {
              Object RESULT =null;
		int temaleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int temaright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object tema = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // SerieAddComp ::= serie_add_comp COMA SerieAddComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieAddComp",33, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // SerieAddComp ::= serie_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieAddComp",33, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // serie_add_comp ::= APERTURALLAVE Param_Add_Comp CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("agregarComponentes");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_add_comp",34, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Param_Add_Comp ::= param_add_comp COMA Param_Add_Comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Param_Add_Comp ::= param_add_comp COMA param_add_comp COMA param_add_comp COMA param_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Param_Add_Comp ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atribsFaltantesAddComp", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // param_add_comp ::= COMILLA ID COMILLA DOSPUNTOS COMILLA IDENTIFICADOR COMILLA 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // param_add_comp ::= COMILLA NOMBRE GUIONBAJO CAMPO COMILLA DOSPUNTOS COMILLA ALFANUMERICO COMILLA 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("nombreCampo", Token.parseToken(nombre));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // param_add_comp ::= COMILLA FORMULARIO COMILLA DOSPUNTOS COMILLA IDENTIFICADOR COMILLA 
            {
              Object RESULT =null;
		int formularioleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int formularioright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object formulario = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // param_add_comp ::= COMILLA CLASE COMILLA DOSPUNTOS COMILLA tipoComponente COMILLA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // param_add_comp ::= COMILLA TEXTO GUIONBAJO VISIBLE COMILLA DOSPUNTOS COMILLA cadena COMILLA 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("textoVisible", null);
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // param_add_comp ::= COMILLA ALINEACION COMILLA DOSPUNTOS COMILLA TIPOALINEACION COMILLA 
            {
              Object RESULT =null;
		int alineacionleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int alineacionright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object alineacion = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("alineacion", Token.parseToken(alineacion));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // param_add_comp ::= COMILLA REQUERIDO COMILLA DOSPUNTOS COMILLA TIPOREQUERIDO COMILLA 
            {
              Object RESULT =null;
		int requerimientoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int requerimientoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object requerimiento = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("requerido", Token.parseToken(requerimiento));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // param_add_comp ::= COMILLA OPCIONES COMILLA DOSPUNTOS COMILLA items COMILLA 
            {
              Object RESULT =null;
		manejadorRespuestas.agregarAtributo("opciones", null);
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // param_add_comp ::= COMILLA FILAS COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;
		int filasleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int filasright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object filas = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("filas", Token.parseToken(filas));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // param_add_comp ::= COMILLA COLUMNAS COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;
		int columnasleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int columnasright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object columnas = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("columnas", Token.parseToken(columnas));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // param_add_comp ::= COMILLA URL COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int urlleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int urlright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object url = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("URL", Token.parseToken(url));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // tipoComponente ::= TIPOCLASE 
            {
              Object RESULT =null;
		int tipoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int tiporight = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object tipo = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("clase", Token.parseToken(tipo));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // tipoComponente ::= CAMPO GUIONBAJO TEXTO 
            {
              Object RESULT =null;
		int elementoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).left;
		int elementoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).right;
		Object elemento = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).value;
		Token.parseToken(elemento).reestablecerLexema("campoTexto");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // tipoComponente ::= AREA GUIONBAJO TEXTO 
            {
              Object RESULT =null;
		int elementoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).left;
		int elementoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).right;
		Object elemento = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)).value;
		Token.parseToken(elemento).reestablecerLexema("areaTexto");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // cadena ::= cadena ALFANUMERICO 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cadena",38, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // cadena ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cadena",38, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // items ::= cadena SEPARADOR items 
            {
              Object RESULT =null;
		int separadorleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int separadorright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object separador = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		manejadorRespuestas.agregarAtributo("", Token.parseToken(separador));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("items",39, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // items ::= cadena 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("items",39, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // SerieEliComp ::= serie_eli_comp COMA SerieEliComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliComp",40, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // SerieEliComp ::= serie_eli_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliComp",40, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // serie_eli_comp ::= APERTURALLAVE Param_Eli_Comp CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("eliminarComponente");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_comp",41, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Param_Eli_Comp ::= param_eli_comp COMA param_eli_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Eli_Comp",42, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Param_Eli_Comp ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atributoFaltante", "id del componente y del formulario", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Eli_Comp",42, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // param_eli_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_comp",43, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // param_eli_comp ::= COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;
		int formularioleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int formularioright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object formulario = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_comp",43, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // SerieModifComp ::= serie_modif_comp COMA SerieModifComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifComp",44, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // SerieModifComp ::= serie_modif_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifComp",44, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // serie_modif_comp ::= APERTURALLAVE Param_Modif_Comp CIERRELLAVE 
            {
              Object RESULT =null;
		manejadorRespuestas.establecerTipoSolicitud("modificarComponentes");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_comp",45, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Param_Modif_Comp ::= param_modif_comp COMA Param_Modif_Comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Param_Modif_Comp ::= param_modif_comp COMA param_modif_comp COMA param_modif_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Param_Modif_Comp ::= error 
            {
              Object RESULT =null;
		manejadorErrores.establecerErrorHallado("atribsFaltantesModifComp", "", "");
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // param_modif_comp ::= param_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_comp",47, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // param_modif_comp ::= COMILLA INDICE COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;
		int indiceleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).left;
		int indiceright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()).right;
		Object indice = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.peek()).value;
		manejadorRespuestas.agregarAtributo("indice", Token.parseToken(indice));
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_comp",47, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Serie_Consultas ::= APERTURALLAVE serie_consultas CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Serie_Consultas",48, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // serie_consultas ::= cuerpo_consultas COMA serie_consultas 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_consultas",49, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // serie_consultas ::= cuerpo_consultas 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_consultas",49, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // cuerpo_consultas ::= COMILLA CONSULTA MENOS NUMERO DOSPUNTOS COMILLA bloque_sqf COMILLA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consultas",50, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-7)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // bloque_sqf ::= SELECT TO FORM ASIGNAR identificacion cuerpo_consulta 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("bloque_sqf",51, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-5)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // identificacion ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("identificacion",52, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // identificacion ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("identificacion",52, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // cuerpo_consulta ::= APERTURAANGULAR seleccion CIERREANGULAR condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consulta",53, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-3)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // cuerpo_consulta ::= APERTURAANGULAR CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consulta",53, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // seleccion ::= ALFANUMERICO COMA seleccion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("seleccion",54, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // seleccion ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("seleccion",54, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // condicion ::= WHERE APERTURAANGULAR negacion comparacion Condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("condicion",55, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Condicion ::= logico comparacion Condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Condicion",56, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Condicion ::= CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Condicion",56, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // comparacion ::= IDENTIFICADOR relacional valor 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("comparacion",57, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // negacion ::= NOT 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("negacion",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // negacion ::= 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("negacion",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // logico ::= AND 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // logico ::= OR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // logico ::= NOT 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // relacional ::= MENOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // relacional ::= MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // relacional ::= IGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // relacional ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // relacional ::= MAYORIGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // relacional ::= MENORIGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // valor ::= NUMERO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",61, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // valor ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",61, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // valor ::= FORMATOFECHA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",61, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser_Indigo$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser_Indigo$do_action(
    int                        CUP$Parser_Indigo$act_num,
    java_cup.runtime.lr_parser CUP$Parser_Indigo$parser,
    java.util.Stack            CUP$Parser_Indigo$stack,
    int                        CUP$Parser_Indigo$top)
    throws java.lang.Exception
    {
              return CUP$Parser_Indigo$do_action_part00000000(
                               CUP$Parser_Indigo$act_num,
                               CUP$Parser_Indigo$parser,
                               CUP$Parser_Indigo$stack,
                               CUP$Parser_Indigo$top);
    }
}

}
