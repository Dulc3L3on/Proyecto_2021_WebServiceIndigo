
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package DeskBackend.Analizadores;

import java_cup.runtime.*;
import DeskBackend.Entidades.Token;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser_Indigo extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Parser_IndigoSym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser_Indigo() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser_Indigo(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser_Indigo(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\206\000\002\002\004\000\002\002\020\000\002\002" +
    "\003\000\002\003\016\000\002\004\004\000\002\004\003" +
    "\000\002\005\015\000\002\005\015\000\002\005\015\000" +
    "\002\005\015\000\002\005\015\000\002\005\015\000\002" +
    "\005\015\000\002\005\015\000\002\005\015\000\002\005" +
    "\015\000\002\005\013\000\002\006\011\000\002\007\011" +
    "\000\002\010\011\000\002\011\011\000\002\012\004\000" +
    "\002\012\003\000\002\013\005\000\002\014\007\000\002" +
    "\014\005\000\002\015\003\000\002\015\011\000\002\016" +
    "\004\000\002\016\003\000\002\017\005\000\002\020\005" +
    "\000\002\020\003\000\002\021\011\000\002\021\011\000" +
    "\002\021\011\000\002\021\011\000\002\022\004\000\002" +
    "\022\003\000\002\023\005\000\002\024\007\000\002\025" +
    "\005\000\002\026\007\000\002\026\007\000\002\027\004" +
    "\000\002\027\003\000\002\030\005\000\002\031\015\000" +
    "\002\031\013\000\002\031\011\000\002\032\007\000\002" +
    "\032\007\000\002\032\007\000\002\032\007\000\002\032" +
    "\011\000\002\032\011\000\002\033\004\000\002\033\003" +
    "\000\002\034\005\000\002\035\007\000\002\036\004\000" +
    "\002\036\003\000\002\037\005\000\002\040\005\000\002" +
    "\040\005\000\002\041\007\000\002\041\007\000\002\041" +
    "\007\000\002\041\007\000\002\042\004\000\002\042\003" +
    "\000\002\043\005\000\002\044\005\000\002\044\011\000" +
    "\002\045\007\000\002\045\011\000\002\045\007\000\002" +
    "\045\007\000\002\045\011\000\002\045\007\000\002\045" +
    "\007\000\002\045\007\000\002\045\007\000\002\045\007" +
    "\000\002\045\007\000\002\046\003\000\002\046\005\000" +
    "\002\046\005\000\002\047\004\000\002\047\003\000\002" +
    "\050\005\000\002\050\003\000\002\051\004\000\002\051" +
    "\003\000\002\052\005\000\002\053\005\000\002\054\007" +
    "\000\002\054\007\000\002\055\004\000\002\055\003\000" +
    "\002\056\005\000\002\057\005\000\002\057\005\000\002" +
    "\060\003\000\002\060\007\000\002\061\005\000\002\062" +
    "\005\000\002\062\003\000\002\063\012\000\002\064\010" +
    "\000\002\065\003\000\002\065\003\000\002\066\006\000" +
    "\002\066\004\000\002\067\005\000\002\067\003\000\002" +
    "\070\007\000\002\071\005\000\002\071\003\000\002\072" +
    "\005\000\002\073\003\000\002\073\002\000\002\074\003" +
    "\000\002\074\003\000\002\074\003\000\002\075\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\075\003\000\002\076\003\000\002\076" +
    "\003\000\002\076\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01da\000\004\065\005\001\002\000\004\002\uffff\001" +
    "\002\000\004\063\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\004\011\001\002\000" +
    "\004\051\012\001\002\000\006\005\014\006\013\001\002" +
    "\000\004\064\u01ce\001\002\000\004\062\015\001\002\000" +
    "\020\012\027\014\030\015\033\016\025\017\032\021\031" +
    "\102\026\001\002\000\004\065\017\001\002\000\004\007" +
    "\020\001\002\000\004\051\021\001\002\000\004\005\022" +
    "\001\002\000\004\063\023\001\002\000\004\064\024\001" +
    "\002\000\006\002\ufffe\065\ufffe\001\002\000\004\051\u01c1" +
    "\001\002\000\004\051\u017c\001\002\000\004\051\u0159\001" +
    "\002\000\004\051\370\001\002\000\004\051\302\001\002" +
    "\000\004\051\157\001\002\000\004\051\034\001\002\000" +
    "\010\013\035\020\036\022\037\001\002\000\004\062\127" +
    "\001\002\000\004\062\070\001\002\000\004\062\040\001" +
    "\002\000\004\064\041\001\002\000\004\060\042\001\002" +
    "\000\004\062\043\001\002\000\004\011\062\001\002\000" +
    "\004\060\045\001\002\000\004\062\054\001\002\000\006" +
    "\057\uffc8\060\045\001\002\000\004\057\050\001\002\000" +
    "\004\061\051\001\002\000\004\065\ufff6\001\002\000\004" +
    "\057\uffc9\001\002\000\004\061\061\001\002\000\004\024" +
    "\055\001\002\000\004\062\056\001\002\000\004\052\057" +
    "\001\002\000\004\075\060\001\002\000\004\061\uffc6\001" +
    "\002\000\006\057\uffc7\060\uffc7\001\002\000\004\051\063" +
    "\001\002\000\004\022\064\001\002\000\004\062\065\001" +
    "\002\000\004\052\066\001\002\000\004\056\067\001\002" +
    "\000\004\060\uffef\001\002\000\004\064\071\001\002\000" +
    "\004\060\072\001\002\000\004\062\074\001\002\000\004" +
    "\060\103\001\002\000\004\011\075\001\002\000\004\051" +
    "\076\001\002\000\004\020\077\001\002\000\004\062\100" +
    "\001\002\000\004\052\101\001\002\000\004\056\102\001" +
    "\002\000\004\060\uffee\001\002\000\004\062\111\001\002" +
    "\000\004\057\107\001\002\000\006\057\uffa4\060\103\001" +
    "\002\000\004\057\uffa5\001\002\000\004\061\110\001\002" +
    "\000\004\065\ufff3\001\002\000\006\022\120\024\117\001" +
    "\002\000\004\054\115\001\002\000\004\061\114\001\002" +
    "\000\006\057\uffa3\060\uffa3\001\002\000\004\062\111\001" +
    "\002\000\004\061\uffa2\001\002\000\004\062\124\001\002" +
    "\000\004\062\121\001\002\000\004\052\122\001\002\000" +
    "\004\075\123\001\002\000\006\054\uffa0\061\uffa0\001\002" +
    "\000\004\052\125\001\002\000\004\075\126\001\002\000" +
    "\006\054\uffa1\061\uffa1\001\002\000\004\064\130\001\002" +
    "\000\004\060\131\001\002\000\004\062\133\001\002\000" +
    "\004\060\142\001\002\000\004\010\134\001\002\000\004" +
    "\051\135\001\002\000\004\013\136\001\002\000\004\062" +
    "\137\001\002\000\004\052\140\001\002\000\004\056\141" +
    "\001\002\000\006\060\ufff0\062\ufff0\001\002\000\004\062" +
    "\151\001\002\000\004\057\146\001\002\000\006\057\uffdb" +
    "\060\142\001\002\000\004\057\uffdc\001\002\000\004\061" +
    "\147\001\002\000\004\065\ufff9\001\002\000\004\061\156" +
    "\001\002\000\004\013\152\001\002\000\004\062\153\001" +
    "\002\000\004\052\154\001\002\000\004\076\155\001\002" +
    "\000\004\061\uffd9\001\002\000\006\057\uffda\060\uffda\001" +
    "\002\000\004\020\160\001\002\000\004\062\161\001\002" +
    "\000\004\064\162\001\002\000\004\060\163\001\002\000" +
    "\004\062\074\001\002\000\004\060\165\001\002\000\004" +
    "\062\174\001\002\000\004\057\171\001\002\000\006\057" +
    "\uffbb\060\165\001\002\000\004\057\uffbc\001\002\000\004" +
    "\061\172\001\002\000\004\065\ufff4\001\002\000\004\054" +
    "\273\001\002\000\030\022\203\024\206\026\177\030\205" +
    "\033\210\034\202\035\201\036\200\037\204\040\207\047" +
    "\211\001\002\000\004\061\176\001\002\000\006\057\uffba" +
    "\060\uffba\001\002\000\004\051\264\001\002\000\004\062" +
    "\261\001\002\000\004\062\253\001\002\000\004\062\250" +
    "\001\002\000\004\062\245\001\002\000\004\062\242\001" +
    "\002\000\004\062\230\001\002\000\004\062\225\001\002" +
    "\000\004\062\222\001\002\000\004\062\217\001\002\000" +
    "\004\051\212\001\002\000\004\025\213\001\002\000\004" +
    "\062\214\001\002\000\004\052\215\001\002\000\004\076" +
    "\216\001\002\000\006\054\uffb6\061\uffb6\001\002\000\004" +
    "\052\220\001\002\000\004\101\221\001\002\000\006\054" +
    "\uffb2\061\uffb2\001\002\000\004\052\223\001\002\000\004" +
    "\076\224\001\002\000\006\054\uffad\061\uffad\001\002\000" +
    "\004\052\226\001\002\000\004\075\227\001\002\000\006" +
    "\054\uffb7\061\uffb7\001\002\000\004\052\231\001\002\000" +
    "\010\025\233\027\232\100\235\001\002\000\004\051\240" +
    "\001\002\000\004\051\236\001\002\000\006\054\uffb4\061" +
    "\uffb4\001\002\000\006\054\uffac\061\uffac\001\002\000\004" +
    "\026\237\001\002\000\006\054\uffab\061\uffab\001\002\000" +
    "\004\026\241\001\002\000\006\054\uffaa\061\uffaa\001\002" +
    "\000\004\052\243\001\002\000\004\073\244\001\002\000" +
    "\006\054\uffae\061\uffae\001\002\000\004\052\246\001\002" +
    "\000\004\075\247\001\002\000\006\054\uffb5\061\uffb5\001" +
    "\002\000\004\052\251\001\002\000\004\023\252\001\002" +
    "\000\006\054\uffb1\061\uffb1\001\002\000\004\052\254\001" +
    "\002\000\004\076\256\001\002\000\006\054\uffb0\061\uffb0" +
    "\001\002\000\010\054\uffa6\061\uffa6\072\257\001\002\000" +
    "\004\076\256\001\002\000\006\054\uffa7\061\uffa7\001\002" +
    "\000\004\052\262\001\002\000\004\073\263\001\002\000" +
    "\006\054\uffaf\061\uffaf\001\002\000\004\032\265\001\002" +
    "\000\004\062\266\001\002\000\004\052\267\001\002\000" +
    "\004\076\271\001\002\000\006\054\uffb3\061\uffb3\001\002" +
    "\000\010\054\uffa8\061\uffa8\076\271\001\002\000\006\054" +
    "\uffa9\061\uffa9\001\002\000\004\062\174\001\002\000\004" +
    "\054\276\001\002\000\004\061\uffb9\001\002\000\004\062" +
    "\174\001\002\000\004\054\300\001\002\000\004\062\174" +
    "\001\002\000\006\054\300\061\uffb8\001\002\000\004\022" +
    "\303\001\002\000\004\062\304\001\002\000\004\064\305" +
    "\001\002\000\004\060\306\001\002\000\004\062\043\001" +
    "\002\000\004\060\310\001\002\000\004\062\317\001\002" +
    "\000\004\057\314\001\002\000\006\057\uffd4\060\310\001" +
    "\002\000\004\057\uffd5\001\002\000\004\061\315\001\002" +
    "\000\004\065\ufff7\001\002\000\004\061\367\001\002\000" +
    "\016\013\337\024\333\042\335\046\336\047\340\050\334" +
    "\001\002\000\004\054\321\001\002\000\004\062\317\001" +
    "\002\000\004\054\323\001\002\000\004\062\317\001\002" +
    "\000\004\054\325\001\002\000\004\062\317\001\002\000" +
    "\006\054\327\061\uffd0\001\002\000\004\062\317\001\002" +
    "\000\006\054\331\061\uffd1\001\002\000\004\062\317\001" +
    "\002\000\004\061\uffd2\001\002\000\004\062\364\001\002" +
    "\000\004\062\361\001\002\000\004\051\354\001\002\000" +
    "\004\062\351\001\002\000\004\051\344\001\002\000\004" +
    "\062\341\001\002\000\004\052\342\001\002\000\004\076" +
    "\343\001\002\000\006\054\uffcd\061\uffcd\001\002\000\004" +
    "\043\345\001\002\000\004\062\346\001\002\000\004\052" +
    "\347\001\002\000\004\076\350\001\002\000\006\054\uffcb" +
    "\061\uffcb\001\002\000\004\052\352\001\002\000\004\076" +
    "\271\001\002\000\006\054\uffce\061\uffce\001\002\000\004" +
    "\043\355\001\002\000\004\062\356\001\002\000\004\052" +
    "\357\001\002\000\004\074\360\001\002\000\006\054\uffca" +
    "\061\uffca\001\002\000\004\052\362\001\002\000\004\077" +
    "\363\001\002\000\006\054\uffcc\061\uffcc\001\002\000\004" +
    "\052\365\001\002\000\004\075\366\001\002\000\006\054" +
    "\uffcf\061\uffcf\001\002\000\006\057\uffd3\060\uffd3\001\002" +
    "\000\010\013\372\020\371\022\373\001\002\000\004\062" +
    "\u0143\001\002\000\004\062\u011d\001\002\000\004\062\374" +
    "\001\002\000\004\064\375\001\002\000\004\060\376\001" +
    "\002\000\004\062\043\001\002\000\004\060\u0100\001\002" +
    "\000\004\062\u0107\001\002\000\006\057\uffc4\060\u0100\001" +
    "\002\000\004\057\u0103\001\002\000\004\061\u0104\001\002" +
    "\000\004\065\ufff5\001\002\000\004\057\uffc5\001\002\000" +
    "\004\054\u011a\001\002\000\012\024\u010a\046\u010c\047\u010d" +
    "\050\u010b\001\002\000\004\061\u0109\001\002\000\006\057" +
    "\uffc3\060\uffc3\001\002\000\004\062\u0117\001\002\000\004" +
    "\062\u0114\001\002\000\004\062\u0111\001\002\000\004\062" +
    "\u010e\001\002\000\004\052\u010f\001\002\000\004\076\u0110" +
    "\001\002\000\006\054\uffbe\061\uffbe\001\002\000\004\052" +
    "\u0112\001\002\000\004\076\271\001\002\000\006\054\uffbf" +
    "\061\uffbf\001\002\000\004\052\u0115\001\002\000\004\077" +
    "\u0116\001\002\000\006\054\uffbd\061\uffbd\001\002\000\004" +
    "\052\u0118\001\002\000\004\075\u0119\001\002\000\006\054" +
    "\uffc0\061\uffc0\001\002\000\004\062\u0107\001\002\000\006" +
    "\054\u011a\061\uffc1\001\002\000\004\061\uffc2\001\002\000" +
    "\004\064\u011e\001\002\000\004\060\u011f\001\002\000\004" +
    "\062\133\001\002\000\004\060\u0122\001\002\000\006\057" +
    "\uffe4\060\u0122\001\002\000\004\062\u0127\001\002\000\004" +
    "\057\u0124\001\002\000\004\061\u0125\001\002\000\004\065" +
    "\ufffa\001\002\000\004\061\u0141\001\002\000\010\013\u012c" +
    "\021\u012d\042\u012b\001\002\000\006\054\u0129\061\uffe1\001" +
    "\002\000\004\062\u0127\001\002\000\004\061\uffe2\001\002" +
    "\000\004\051\u013c\001\002\000\004\051\u0133\001\002\000" +
    "\004\051\u012e\001\002\000\004\041\u012f\001\002\000\004" +
    "\062\u0130\001\002\000\004\052\u0131\001\002\000\004\076" +
    "\u0132\001\002\000\006\054\uffde\061\uffde\001\002\000\006" +
    "\021\u0134\044\u0135\001\002\000\004\062\u0139\001\002\000" +
    "\004\062\u0136\001\002\000\004\052\u0137\001\002\000\004" +
    "\076\u0138\001\002\000\006\054\uffe0\061\uffe0\001\002\000" +
    "\004\052\u013a\001\002\000\004\076\u013b\001\002\000\006" +
    "\054\uffdf\061\uffdf\001\002\000\004\045\u013d\001\002\000" +
    "\004\062\u013e\001\002\000\004\052\u013f\001\002\000\004" +
    "\074\u0140\001\002\000\006\054\uffdd\061\uffdd\001\002\000" +
    "\006\057\uffe3\060\uffe3\001\002\000\004\057\uffe5\001\002" +
    "\000\004\064\u0144\001\002\000\004\060\u0145\001\002\000" +
    "\004\062\074\001\002\000\004\060\u0147\001\002\000\004" +
    "\062\u014e\001\002\000\006\057\uff9e\060\u0147\001\002\000" +
    "\004\057\u014a\001\002\000\004\061\u014b\001\002\000\004" +
    "\065\ufff2\001\002\000\004\057\uff9f\001\002\000\006\054" +
    "\uff9a\061\uff9a\001\002\000\032\022\203\024\206\026\177" +
    "\030\205\031\u0155\033\210\034\202\035\201\036\200\037" +
    "\204\040\207\047\211\001\002\000\004\061\u0154\001\002" +
    "\000\004\054\u0151\001\002\000\004\062\u014e\001\002\000" +
    "\004\061\uff9c\001\002\000\006\054\u0151\061\uff9b\001\002" +
    "\000\006\057\uff9d\060\uff9d\001\002\000\004\062\u0156\001" +
    "\002\000\004\052\u0157\001\002\000\004\073\u0158\001\002" +
    "\000\006\054\uff99\061\uff99\001\002\000\004\013\u015a\001" +
    "\002\000\004\062\u015b\001\002\000\004\064\u015c\001\002" +
    "\000\004\060\u015d\001\002\000\004\062\133\001\002\000" +
    "\004\060\u015f\001\002\000\004\062\u0167\001\002\000\006" +
    "\057\uffeb\060\u015f\001\002\000\004\057\u0162\001\002\000" +
    "\004\061\u0163\001\002\000\004\065\ufffb\001\002\000\004" +
    "\057\uffec\001\002\000\006\054\uffe7\061\uffe7\001\002\000" +
    "\004\054\u0178\001\002\000\010\013\u016b\041\u016c\042\u016a" +
    "\001\002\000\004\061\u0169\001\002\000\006\057\uffea\060" +
    "\uffea\001\002\000\004\051\u0173\001\002\000\004\062\u0170" +
    "\001\002\000\004\062\u016d\001\002\000\004\052\u016e\001" +
    "\002\000\004\076\u016f\001\002\000\010\054\uffd6\057\uffd6" +
    "\061\uffd6\001\002\000\004\052\u0171\001\002\000\004\076" +
    "\u0172\001\002\000\010\054\uffd7\057\uffd7\061\uffd7\001\002" +
    "\000\004\043\u0174\001\002\000\004\062\u0175\001\002\000" +
    "\004\052\u0176\001\002\000\004\074\u0177\001\002\000\006" +
    "\054\uffe6\061\uffe6\001\002\000\004\062\u0167\001\002\000" +
    "\006\054\u017a\061\uffe8\001\002\000\004\062\u0167\001\002" +
    "\000\004\061\uffe9\001\002\000\004\103\u017d\001\002\000" +
    "\004\062\u017e\001\002\000\004\064\u017f\001\002\000\004" +
    "\060\u0180\001\002\000\004\062\u0181\001\002\000\004\110" +
    "\u0184\001\002\000\004\061\u0183\001\002\000\004\065\ufff1" +
    "\001\002\000\004\062\u0185\001\002\000\004\064\u0186\001" +
    "\002\000\004\056\u0187\001\002\000\004\060\u0188\001\002" +
    "\000\004\062\u018c\001\002\000\004\057\u018a\001\002\000" +
    "\004\061\uffed\001\002\000\004\061\u01c0\001\002\000\004" +
    "\111\u0190\001\002\000\006\054\u018e\061\uff96\001\002\000" +
    "\004\062\u018c\001\002\000\004\061\uff97\001\002\000\004" +
    "\055\u0191\001\002\000\004\073\u0192\001\002\000\004\052" +
    "\u0193\001\002\000\004\062\u0194\001\002\000\004\104\u0195" +
    "\001\002\000\004\105\u0198\001\002\000\004\062\u0197\001" +
    "\002\000\006\054\uff95\061\uff95\001\002\000\004\106\u0199" +
    "\001\002\000\004\053\u019a\001\002\000\006\075\u019c\076" +
    "\u019d\001\002\000\004\056\u019f\001\002\000\004\056\uff93" +
    "\001\002\000\004\056\uff92\001\002\000\004\062\uff94\001" +
    "\002\000\006\057\u01a2\076\u01a1\001\002\000\004\057\u01a5" +
    "\001\002\000\006\054\u01a3\057\uff8e\001\002\000\004\062" +
    "\uff90\001\002\000\004\076\u01a1\001\002\000\004\057\uff8f" +
    "\001\002\000\004\107\u01a6\001\002\000\004\056\u01a8\001" +
    "\002\000\004\062\uff91\001\002\000\006\075\uff88\114\u01a9" +
    "\001\002\000\004\075\uff89\001\002\000\004\075\u01ac\001" +
    "\002\000\012\057\u01bc\112\u01b9\113\u01bd\114\u01b8\001\002" +
    "\000\016\064\u01b3\065\u01b2\066\u01b0\067\u01b1\070\u01ad\071" +
    "\u01ae\001\002\000\010\073\uff7f\074\uff7f\076\uff7f\001\002" +
    "\000\010\073\uff80\074\uff80\076\uff80\001\002\000\010\073" +
    "\u01b4\074\u01b7\076\u01b5\001\002\000\010\073\uff82\074\uff82" +
    "\076\uff82\001\002\000\010\073\uff81\074\uff81\076\uff81\001" +
    "\002\000\010\073\uff84\074\uff84\076\uff84\001\002\000\010" +
    "\073\uff83\074\uff83\076\uff83\001\002\000\012\057\uff7e\112" +
    "\uff7e\113\uff7e\114\uff7e\001\002\000\012\057\uff7d\112\uff7d" +
    "\113\uff7d\114\uff7d\001\002\000\012\057\uff8a\112\uff8a\113" +
    "\uff8a\114\uff8a\001\002\000\012\057\uff7c\112\uff7c\113\uff7c" +
    "\114\uff7c\001\002\000\004\075\uff85\001\002\000\004\075" +
    "\uff87\001\002\000\004\075\u01ac\001\002\000\004\062\uff8d" +
    "\001\002\000\004\062\uff8b\001\002\000\004\075\uff86\001" +
    "\002\000\012\057\u01bc\112\u01b9\113\u01bd\114\u01b8\001\002" +
    "\000\004\062\uff8c\001\002\000\004\057\uff98\001\002\000" +
    "\004\013\u01c2\001\002\000\004\062\u01c3\001\002\000\004" +
    "\064\u01c4\001\002\000\004\060\u01c5\001\002\000\004\062" +
    "\133\001\002\000\004\062\u01c8\001\002\000\004\057\u01cc" +
    "\001\002\000\006\013\u016b\041\u016c\001\002\000\004\054" +
    "\u01ca\001\002\000\004\062\u01c8\001\002\000\004\057\uffd8" +
    "\001\002\000\004\061\u01cd\001\002\000\004\065\ufff8\001" +
    "\002\000\004\065\u01d0\001\002\000\004\065\u01d0\001\002" +
    "\000\004\063\u01d1\001\002\000\004\004\u01d2\001\002\000" +
    "\004\051\u01d3\001\002\000\004\005\014\001\002\000\004" +
    "\065\ufffc\001\002\000\004\065\u01d7\001\002\000\004\065" +
    "\ufffd\001\002\000\004\063\u01d8\001\002\000\006\004\u01d2" +
    "\007\u01d9\001\002\000\004\051\u01da\001\002\000\004\006" +
    "\u01db\001\002\000\004\064\u01dc\001\002\000\004\002\000" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01da\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\015\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\043\001\001\000\002\001\001\000" +
    "\006\033\046\034\045\001\001\000\004\035\052\001\001" +
    "\000\006\033\051\034\045\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\072\001\001\000" +
    "\006\051\103\052\104\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\053\112" +
    "\054\111\001\001\000\002\001\001\000\006\051\105\052" +
    "\104\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\054\115\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\131\001\001\000\006\022\142" +
    "\023\143\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\147\001\001\000" +
    "\002\001\001\000\006\022\144\023\143\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\163\001\001\000\006\042\165\043" +
    "\166\001\001\000\006\044\174\045\172\001\001\000\002" +
    "\001\001\000\006\042\167\043\166\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\046\233\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\050\254\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\050\257\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\047\267\001" +
    "\001\000\002\001\001\000\004\047\271\001\001\000\002" +
    "\001\001\000\006\044\274\045\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\044\274\045\276\001\001" +
    "\000\002\001\001\000\006\044\274\045\300\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\306\001\001\000" +
    "\006\027\310\030\311\001\001\000\006\031\315\032\317" +
    "\001\001\000\002\001\001\000\006\027\312\030\311\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\321\001\001\000\002\001\001\000\004\032\323" +
    "\001\001\000\002\001\001\000\004\032\325\001\001\000" +
    "\002\001\001\000\004\032\327\001\001\000\002\001\001" +
    "\000\004\032\331\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\047\352\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\376" +
    "\001\001\000\006\036\u0101\037\u0100\001\001\000\006\040" +
    "\u0107\041\u0105\001\001\000\006\036\u0104\037\u0100\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\047\u0112\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\040\u011b\041\u011a" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\u011f\001\001\000\006" +
    "\016\u0122\017\u0120\001\001\000\006\016\u0141\017\u0120\001" +
    "\001\000\006\020\u0125\021\u0127\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\020\u0129\021\u0127" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\u0145\001\001\000" +
    "\006\055\u0148\056\u0147\001\001\000\010\045\u014c\057\u014e" +
    "\060\u014f\001\001\000\006\055\u014b\056\u0147\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\045\u014c\057\u0151\060\u0152" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\u015d\001\001" +
    "\000\006\012\u0160\013\u015f\001\001\000\010\014\u0167\015" +
    "\u0165\026\u0164\001\001\000\006\012\u0163\013\u015f\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\015\u0178\026\u0164\001\001\000\002\001\001" +
    "\000\006\015\u017a\026\u0164\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u0181\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\061\u0188\001\001\000" +
    "\006\062\u018a\063\u018c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\062\u018e\063\u018c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\064\u0195\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\065\u019a\001\001\000\004\066\u019d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\067\u019f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\067\u01a3\001\001\000" +
    "\002\001\001\000\004\070\u01a6\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\073\u01a9\001\001\000\002\001" +
    "\001\000\004\072\u01aa\001\001\000\006\071\u01ba\074\u01b9" +
    "\001\001\000\004\075\u01ae\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\076\u01b5\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\072" +
    "\u01bd\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\071\u01be\074\u01b9\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u01c5\001" +
    "\001\000\006\025\u01c6\026\u01c8\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\u01ca\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\003\u01ce\001\001\000\006\003\u01d3\004\u01d4\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\u01d5\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser_Indigo$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser_Indigo$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser_Indigo$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public Parser_Indigo (Lexer lexer){//a menos que lo sobreescribas, no es necesario colocarlo, puesto que ya existe este cnstrc y además el lexer hereda de Scanner...
        super(lexer);        
    }

    protected int error_sync_size() {//este es para cb el # de tokens que el parser requiere para recuperarse de los errores
		return 1;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser_Indigo$actions {
  private final Parser_Indigo parser;

  /** Constructor */
  CUP$Parser_Indigo$actions(Parser_Indigo parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser_Indigo$do_action_part00000000(
    int                        CUP$Parser_Indigo$act_num,
    java_cup.runtime.lr_parser CUP$Parser_Indigo$parser,
    java.util.Stack            CUP$Parser_Indigo$stack,
    int                        CUP$Parser_Indigo$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser_Indigo$result;

      /* select the action based on the action number */
      switch (CUP$Parser_Indigo$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= p EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)).value;
		RESULT = start_val;
              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser_Indigo$parser.done_parsing();
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // p ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUDES MAYOR cuerpo Cuerpo MENOR ADMIRACION FIN GUIONBAJO SOLICITUDES MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-13)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // p ::= cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUD opciones MENOR FIN GUIONBAJO SOLICITUD ADMIRACION MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo",1, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-11)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Cuerpo ::= Cuerpo cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Cuerpo ::= cuerpo 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // opciones ::= COMILLA CREAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieCreacionUser CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // opciones ::= COMILLA MODIFICAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieModifUser CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // opciones ::= COMILLA ELIMINAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieEliUser CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // opciones ::= COMILLA LOGIN GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user ParamLogin CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // opciones ::= COMILLA NUEVO GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieNuevoForm CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // opciones ::= COMILLA ELIMINAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieEliForm CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // opciones ::= COMILLA MODIFICAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieModifForm CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // opciones ::= COMILLA AGREGAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieAddComp CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // opciones ::= COMILLA ELIMINAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieEliComp CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // opciones ::= COMILLA MODIFICAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieModifComp CIERREANGULAR CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // opciones ::= COMILLA CONSULTAR GUIONBAJO DATOS COMILLA MAYOR APERTURALLAVE b_sqf CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // b_user ::= COMILLA CREDENCIALES GUIONBAJO USUARIO COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_user",4, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // b_form ::= COMILLA PARAMETROS GUIONBAJO FORMULARIO COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_form",5, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // b_comp ::= COMILLA PARAMETROS GUIONBAJO COMPONENTE COMILLA DOSPUNTOS APERTURAANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_comp",6, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // b_sqf ::= COMILLA CONSULTAS COMILLA MAYOR APERTURAANGULAR Serie_Consultas CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("b_sqf",7, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SerieCreacionUser ::= serie_creacion SerieCreacionUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieCreacionUser",8, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SerieCreacionUser ::= serie_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieCreacionUser",8, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // serie_creacion ::= APERTURALLAVE ParamCreacion CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_creacion",9, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ParamCreacion ::= param_creacion COMA param_creacion COMA param_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",10, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ParamCreacion ::= param_creacion COMA param_creacion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamCreacion",10, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // param_creacion ::= param_login 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_creacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // param_creacion ::= COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_creacion",11, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // SerieModifUser ::= serie_modif_user SerieModifUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifUser",12, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // SerieModifUser ::= serie_modif_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifUser",12, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // serie_modif_user ::= APERTURALLAVE ParamModifUser CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_user",13, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ParamModifUser ::= param_modif_user COMA ParamModifUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",14, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ParamModifUser ::= param_modif_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamModifUser",14, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // param_modif_user ::= COMILLA USUARIO GUIONBAJO ANTIGUO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // param_modif_user ::= COMILLA USUARIO GUIONBAJO NUEVO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // param_modif_user ::= COMILLA NUEVO GUIONBAJO PASSWORD COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // param_modif_user ::= COMILLA FECHA GUIONBAJO MODIFICACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_user",15, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // SerieEliUser ::= serie_eli_user SerieEliUser 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliUser",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // SerieEliUser ::= serie_eli_user 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliUser",16, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // serie_eli_user ::= APERTURALLAVE param_eli CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_user",17, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // param_eli ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli",18, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ParamLogin ::= param_login COMA param_login 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("ParamLogin",19, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // param_login ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_login",20, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // param_login ::= COMILLA PASSWORD COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_login",20, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // SerieNuevoForm ::= serie_nuevo_form SerieNuevoForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieNuevoForm",21, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // SerieNuevoForm ::= serie_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieNuevoForm",21, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // serie_nuevo_form ::= APERTURALLAVE Param_Nuevo_Form CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_nuevo_form",22, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-10)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-8)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",23, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // param_nuevo_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // param_nuevo_form ::= COMILLA TITULO COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // param_nuevo_form ::= COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // param_nuevo_form ::= COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // param_nuevo_form ::= COMILLA USUARIO GUIONBAJO CREACION COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // param_nuevo_form ::= COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",24, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // SerieEliForm ::= serie_eli_form SerieEliForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliForm",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // SerieEliForm ::= serie_eli_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliForm",25, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // serie_eli_form ::= APERTURALLAVE param_eli_form CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_form",26, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // param_eli_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_form",27, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // SerieModifForm ::= serie_modif_form SerieModifForm 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifForm",28, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // SerieModifForm ::= serie_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifForm",28, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // serie_modif_form ::= APERTURALLAVE Param_Modif_Form CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_form",29, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Param_Modif_Form ::= param_modif_form COMA Param_Modif_Form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Param_Modif_Form ::= param_modif_form COMA param_modif_form 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",30, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // param_modif_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // param_modif_form ::= COMILLA TITULO COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // param_modif_form ::= COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // param_modif_form ::= COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_form",31, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // SerieAddComp ::= serie_add_comp SerieAddComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieAddComp",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // SerieAddComp ::= serie_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieAddComp",32, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // serie_add_comp ::= APERTURALLAVE Param_Add_Comp CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_add_comp",33, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Param_Add_Comp ::= param_add_comp COMA Param_Add_Comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",34, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Param_Add_Comp ::= param_add_comp COMA param_add_comp COMA param_add_comp COMA param_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",34, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // param_add_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // param_add_comp ::= COMILLA NOMBRE GUIONBAJO CAMPO COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // param_add_comp ::= COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // param_add_comp ::= COMILLA CLASE COMILLA DOSPUNTOS tipoComponente 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // param_add_comp ::= COMILLA TEXTO GUIONBAJO VISIBLE COMILLA DOSPUNTOS cadena 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-6)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // param_add_comp ::= COMILLA ALINEACION COMILLA DOSPUNTOS TIPOALINEACION 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // param_add_comp ::= COMILLA REQUERIDO COMILLA DOSPUNTOS TIPOREQUERIDO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // param_add_comp ::= COMILLA OPCIONES COMILLA DOSPUNTOS items 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // param_add_comp ::= COMILLA FILAS COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // param_add_comp ::= COMILLA COLUMNAS COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // param_add_comp ::= COMILLA URL COMILLA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_add_comp",35, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // tipoComponente ::= TIPOCLASE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // tipoComponente ::= CAMPO GUIONBAJO TEXTO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // tipoComponente ::= AREA GUIONBAJO TEXTO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("tipoComponente",36, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // cadena ::= ALFANUMERICO cadena 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cadena",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // cadena ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cadena",37, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // items ::= ALFANUMERICO SEPARADOR items 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("items",38, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // items ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("items",38, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // SerieEliComp ::= serie_eli_comp SerieEliComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliComp",39, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // SerieEliComp ::= serie_eli_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieEliComp",39, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // serie_eli_comp ::= APERTURALLAVE Param_Eli_Comp CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_eli_comp",40, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Param_Eli_Comp ::= param_eli_comp COMA param_eli_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Eli_Comp",41, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // param_eli_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_comp",42, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // param_eli_comp ::= COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_eli_comp",42, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // SerieModifComp ::= serie_modif_comp SerieModifComp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifComp",43, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // SerieModifComp ::= serie_modif_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("SerieModifComp",43, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // serie_modif_comp ::= APERTURALLAVE Param_Modif_Comp CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_modif_comp",44, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Param_Modif_Comp ::= param_modif_comp COMA Param_Modif_Comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",45, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Param_Modif_Comp ::= param_modif_comp COMA param_modif_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",45, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // param_modif_comp ::= param_add_comp 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // param_modif_comp ::= COMILLA INDICE COMILLA DOSPUNTOS NUMERO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("param_modif_comp",46, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Serie_Consultas ::= APERTURALLAVE serie_consultas CIERRELLAVE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Serie_Consultas",47, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // serie_consultas ::= cuerpo_consultas COMA serie_consultas 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_consultas",48, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // serie_consultas ::= cuerpo_consultas 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("serie_consultas",48, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // cuerpo_consultas ::= COMILLA CONSULTA MENOS NUMERO DOSPUNTOS COMILLA bloque_sqf COMILLA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consultas",49, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-7)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // bloque_sqf ::= SELECT TO FORM ASIGNAR identificacion cuerpo_consulta 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("bloque_sqf",50, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-5)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // identificacion ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("identificacion",51, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // identificacion ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("identificacion",51, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // cuerpo_consulta ::= APERTURAANGULAR seleccion CIERREANGULAR condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consulta",52, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-3)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // cuerpo_consulta ::= APERTURAANGULAR CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("cuerpo_consulta",52, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-1)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // seleccion ::= ALFANUMERICO COMA seleccion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("seleccion",53, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // seleccion ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("seleccion",53, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // condicion ::= WHERE APERTURAANGULAR negacion comparacion Condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("condicion",54, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-4)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Condicion ::= logico comparacion Condicion 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Condicion",55, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Condicion ::= CIERREANGULAR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("Condicion",55, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // comparacion ::= IDENTIFICADOR relacional valor 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("comparacion",56, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.elementAt(CUP$Parser_Indigo$top-2)), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // negacion ::= NOT 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("negacion",57, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // negacion ::= 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("negacion",57, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // logico ::= AND 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // logico ::= OR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // logico ::= NOT 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("logico",58, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // relacional ::= MENOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // relacional ::= MAYOR 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // relacional ::= IGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // relacional ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // relacional ::= MAYORIGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // relacional ::= MENORIGUAL 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("relacional",59, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // valor ::= NUMERO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // valor ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // valor ::= FORMATOFECHA 
            {
              Object RESULT =null;

              CUP$Parser_Indigo$result = parser.getSymbolFactory().newSymbol("valor",60, ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser_Indigo$stack.peek()), RESULT);
            }
          return CUP$Parser_Indigo$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser_Indigo$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser_Indigo$do_action(
    int                        CUP$Parser_Indigo$act_num,
    java_cup.runtime.lr_parser CUP$Parser_Indigo$parser,
    java.util.Stack            CUP$Parser_Indigo$stack,
    int                        CUP$Parser_Indigo$top)
    throws java.lang.Exception
    {
              return CUP$Parser_Indigo$do_action_part00000000(
                               CUP$Parser_Indigo$act_num,
                               CUP$Parser_Indigo$parser,
                               CUP$Parser_Indigo$stack,
                               CUP$Parser_Indigo$top);
    }
}

}
