package DeskBackend.Analizadores;
import java_cup.runtime.*;
import DeskBackend.Entidades.Token;
import DeskBackend.Entidades.Manejadores.ManejadorArchivoRespuestaEntrada;
import java.util.LinkedList;

class Parser_Indigo;

parser code{:
    private ManejadorArchivoRespuestaEntrada manejadorRespuestas;    

    public Parser_Indigo (Lexer lexer){//a menos que lo sobreescribas, no es necesario colocarlo, puesto que ya existe este cnstrc y además el lexer hereda de Scanner...
        super(lexer);                 

        manejadorRespuestas = new ManejadorArchivoRespuestaEntrada();
    }        

    protected int error_sync_size() {//este es para cb el # de tokens que el parser requiere para recuperarse de los errores
        return 1;
    }        
:}

terminal INI, SOLICITUD, SOLICITUDES, FIN;
terminal CREDENCIALES, PARAMETROS, CREAR, USUARIO, MODIFICAR, ELIMINAR, LOGIN, AGREGAR, COMPONENTE, NUEVO, FORMULARIO, TIPOREQUERIDO, ID, CAMPO, TEXTO, AREA, CLASE, INDICE, VISIBLE, ALINEACION, REQUERIDO, OPCIONES, FILAS, COLUMNAS, URL, PASSWORD, FECHA, CREACION, ANTIGUO, MODIFICACION, TITULO, NOMBRE, TEMA;
terminal GUIONBAJO, DOSPUNTOS, ASIGNAR, COMA, MENOS, APERTURAANGULAR, CIERREANGULAR, APERTURALLAVE, CIERRELLAVE, COMILLA, ADMIRACION, MAYOR, MENOR, IGUAL, DIFERENTE, MENORIGUAL, MAYORIGUAL, SEPARADOR;
terminal NUMERO, FORMATOFECHA, IDENTIFICADOR, ALFANUMERICO;//Recuerda que identificador es el nombre que reciben las "variables" e ID es la palabra reservada que indica que el valor del parámetro que se encontrara es un identificador xD
terminal TIPOTEMA;
terminal TIPOCLASE;
terminal TIPOALINEACION;
terminal CONSULTAR, DATOS, SELECT, TO, FORM, WHERE, CONSULTAS, CONSULTA, AND, OR, NOT;

non terminal p, cuerpo, Cuerpo, opciones, b_user, b_form, b_comp, b_sqf, SerieCreacionUser, serie_creacion, ParamCreacion, param_creacion, SerieModifUser, serie_modif_user, ParamModifUser, param_modif_user, SerieEliUser, serie_eli_user, param_eli, ParamLogin, param_login, SerieNuevoForm, serie_nuevo_form, Param_Nuevo_Form, param_nuevo_form, SerieEliForm, serie_eli_form, param_eli_form, SerieModifForm, serie_modif_form, Param_Modif_Form, param_modif_form, SerieAddComp, serie_add_comp, Param_Add_Comp, param_add_comp, tipoComponente, cadena, items, SerieEliComp, serie_eli_comp, Param_Eli_Comp, param_eli_comp, SerieModifComp, serie_modif_comp, Param_Modif_Comp, param_modif_comp, Serie_Consultas, serie_consultas, cuerpo_consultas, bloque_sqf, identificacion, cuerpo_consulta, seleccion, condicion, Condicion, comparacion, negacion, logico, relacional, valor;

/*precedencia? hasta donde sé no es necesario que incluya eso :v xD*/

start with p;

p ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUDES MAYOR cuerpo Cuerpo MENOR ADMIRACION FIN GUIONBAJO SOLICITUDES MAYOR                   {:manejadorRespuestas.finalizarArchivo();:}
    | cuerpo                                                                                                                            {:manejadorRespuestas.finalizarArchivo();:}
    ;

cuerpo ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUD opciones MENOR FIN GUIONBAJO SOLICITUD ADMIRACION MAYOR
        ;

Cuerpo ::= Cuerpo cuerpo
         | cuerpo
         ;

opciones ::= COMILLA CREAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieCreacionUser CIERREANGULAR CIERRELLAVE
           | COMILLA MODIFICAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieModifUser CIERREANGULAR CIERRELLAVE
           | COMILLA ELIMINAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieEliUser CIERREANGULAR CIERRELLAVE
           | COMILLA LOGIN GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user ParamLogin CIERREANGULAR CIERRELLAVE
           | COMILLA NUEVO GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieNuevoForm CIERREANGULAR CIERRELLAVE
           | COMILLA ELIMINAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieEliForm CIERREANGULAR CIERRELLAVE
           | COMILLA MODIFICAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieModifForm CIERREANGULAR CIERRELLAVE
           | COMILLA AGREGAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieAddComp CIERREANGULAR CIERRELLAVE
           | COMILLA ELIMINAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieEliComp CIERREANGULAR CIERRELLAVE
           | COMILLA MODIFICAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieModifComp CIERREANGULAR CIERRELLAVE
           | COMILLA CONSULTAR GUIONBAJO DATOS COMILLA MAYOR APERTURALLAVE b_sqf CIERRELLAVE
           ;

b_user ::= COMILLA CREDENCIALES GUIONBAJO USUARIO COMILLA DOSPUNTOS APERTURAANGULAR 
        ;
    
b_form ::= COMILLA PARAMETROS GUIONBAJO FORMULARIO COMILLA DOSPUNTOS APERTURAANGULAR
        ;

b_comp ::= COMILLA PARAMETROS GUIONBAJO COMPONENTE COMILLA DOSPUNTOS APERTURAANGULAR 
        ;

b_sqf ::= COMILLA CONSULTAS COMILLA MAYOR APERTURAANGULAR Serie_Consultas CIERREANGULAR
        ;

SerieCreacionUser ::= serie_creacion SerieCreacionUser                              
                 | serie_creacion
                 ;

serie_creacion ::= APERTURALLAVE ParamCreacion CIERRELLAVE                                    {:manejadorRespuestas.establecerTipoSolicitud("creacionUsuario");:}
                 ;

ParamCreacion ::= param_creacion COMA param_creacion COMA param_creacion                    
                 | param_creacion COMA param_creacion
                 ;

param_creacion ::= param_login
                 | COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA:fecha      {:manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));:}  
                 ;

SerieModifUser ::= serie_modif_user SerieModifUser
                 | serie_modif_user
                 ;

serie_modif_user ::= APERTURALLAVE ParamModifUser CIERRELLAVE                                  {:manejadorRespuestas.establecerTipoSolicitud("modificacionUsuario");:}                
                   ;

ParamModifUser ::= param_modif_user COMA ParamModifUser
              | param_modif_user
              ;

param_modif_user ::= COMILLA USUARIO GUIONBAJO ANTIGUO COMILLA DOSPUNTOS ALFANUMERICO:nombre   {:manejadorRespuestas.agregarAtributo("usuarioAntiguo", Token.parseToken(nombre));:}
              | COMILLA USUARIO GUIONBAJO NUEVO COMILLA DOSPUNTOS ALFANUMERICO :nombre         {:manejadorRespuestas.agregarAtributo("usuarioNuevo", Token.parseToken(nombre));:}   
              | COMILLA NUEVO GUIONBAJO PASSWORD COMILLA DOSPUNTOS ALFANUMERICO:password       {:manejadorRespuestas.agregarAtributo("nuevoPassword", Token.parseToken(password));:}
              | COMILLA FECHA GUIONBAJO MODIFICACION COMILLA DOSPUNTOS FORMATOFECHA:fecha      {:manejadorRespuestas.agregarAtributo("fechaModificacion", Token.parseToken(fecha));:}
              ;

SerieEliUser ::= serie_eli_user SerieEliUser
                | serie_eli_user
                ;

serie_eli_user ::= APERTURALLAVE param_eli CIERRELLAVE                                         {:manejadorRespuestas.establecerTipoSolicitud("eliminacionUsuario");:}                         
                 ;

param_eli ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO:nombre                            {:manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));:}
            ;


ParamLogin ::= APERTURALLAVE param_login COMA param_login CIERRELLAVE                          {:manejadorRespuestas.establecerTipoSolicitud("loginUsuario");:}                                                                                  
             ;

param_login ::= COMILLA USUARIO COMILLA DOSPUNTOS ALFANUMERICO:nombre                          {:manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));:}  
              | COMILLA PASSWORD COMILLA DOSPUNTOS ALFANUMERICO:password                       {:manejadorRespuestas.agregarAtributo("password", Token.parseToken(password));:}
              ; 

SerieNuevoForm ::= serie_nuevo_form SerieNuevoForm
                   | serie_nuevo_form
                   ;

serie_nuevo_form ::= APERTURALLAVE Param_Nuevo_Form CIERRELLAVE                                {:manejadorRespuestas.establecerTipoSolicitud("creacionFormulario");:}             
                    ;

Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form         
                   | param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form
                   | param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form
                   ;

param_nuevo_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR:id                              {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}
                   | COMILLA TITULO COMILLA DOSPUNTOS cadena:titulo                             {:manejadorRespuestas.agregarAtributo("titulo", Token.parseToken(titulo));:}
                   | COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO:nombre                       {:manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));:}
                   | COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA:tema                               {:manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));:}
                   | COMILLA USUARIO GUIONBAJO CREACION COMILLA DOSPUNTOS ALFANUMERICO:nombre   {:manejadorRespuestas.agregarAtributo("usuarioCreacion", Token.parseToken(nombre));:}
                   | COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS FORMATOFECHA:fecha      {:manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));:}  
                   ;

SerieEliForm ::= serie_eli_form SerieEliForm
                | serie_eli_form
                ;

serie_eli_form ::= APERTURALLAVE param_eli_form CIERRELLAVE                                     {:manejadorRespuestas.establecerTipoSolicitud("eliminacionFormulario");:}                                    
                 ;

param_eli_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR:id                                {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}                   
                ;   

SerieModifForm ::= serie_modif_form SerieModifForm
                  | serie_modif_form
                  ;

serie_modif_form ::= APERTURALLAVE Param_Modif_Form CIERRELLAVE                                 {:manejadorRespuestas.establecerTipoSolicitud("modificacionFormulario");:}                         
                   ;
        
Param_Modif_Form ::= param_modif_form COMA Param_Modif_Form
                   | param_modif_form COMA param_modif_form
                   ;

param_modif_form ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR:id                              {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}       
                   | COMILLA TITULO COMILLA DOSPUNTOS cadena:titulo                             {:manejadorRespuestas.agregarAtributo("titulo", Token.parseToken(titulo));:}       
                   | COMILLA NOMBRE COMILLA DOSPUNTOS ALFANUMERICO:nombre                       {:manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));:}       
                   | COMILLA TEMA COMILLA DOSPUNTOS TIPOTEMA:tema                               {:manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));:}      
                   ;

SerieAddComp ::= serie_add_comp SerieAddComp
                | serie_add_comp
                ;

serie_add_comp ::= APERTURALLAVE Param_Add_Comp CIERRELLAVE                                     {:manejadorRespuestas.establecerTipoSolicitud("agregarComponentes");:}                    
                 ;

Param_Add_Comp ::= param_add_comp COMA Param_Add_Comp
                 | param_add_comp COMA param_add_comp COMA param_add_comp COMA param_add_comp
                 ;

param_add_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR:id                                {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}                          
                 | COMILLA NOMBRE GUIONBAJO CAMPO COMILLA DOSPUNTOS ALFANUMERICO:nombre         {:manejadorRespuestas.agregarAtributo("nombreCampo", Token.parseToken(nombre));:}      
                 | COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR:formulario                {:manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));:}      
                 | COMILLA CLASE COMILLA DOSPUNTOS tipoComponente                         
                 | COMILLA TEXTO GUIONBAJO VISIBLE COMILLA DOSPUNTOS cadena:texto                           
                 | COMILLA ALINEACION COMILLA DOSPUNTOS TIPOALINEACION:alineacion               {:manejadorRespuestas.agregarAtributo("alineacion", Token.parseToken(alineacion));:}       
                 | COMILLA REQUERIDO COMILLA DOSPUNTOS TIPOREQUERIDO:requerimiento              {:manejadorRespuestas.agregarAtributo("requerido", Token.parseToken(requerimiento));:}       
                 | COMILLA OPCIONES COMILLA DOSPUNTOS items                                    
                 | COMILLA FILAS COMILLA DOSPUNTOS NUMERO:filas                                 {:manejadorRespuestas.agregarAtributo("filas", Token.parseToken(filas));:}         
                 | COMILLA COLUMNAS COMILLA DOSPUNTOS NUMERO:columnas                           {:manejadorRespuestas.agregarAtributo("columnas", Token.parseToken(columnas));:}     
                 | COMILLA URL COMILLA DOSPUNTOS ALFANUMERICO:url                               {:manejadorRespuestas.agregarAtributo("URL", Token.parseToken(url));:}      
                 ;

tipoComponente ::= TIPOCLASE:tipo                                                               {:manejadorRespuestas.agregarAtributo("clase", Token.parseToken(tipo));:}       
                 | CAMPO:elemento GUIONBAJO TEXTO                                                 {:Token.parseToken(elemento).reestablecerLexema("campoTexto");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));:}    
                 | AREA:elemento GUIONBAJO TEXTO                                                {:Token.parseToken(elemento).reestablecerLexema("areaTexto");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));:}    
                 ;//NOTA[pero no da problemas xD]: si hacer esto te diera problemas con lo que habías pensado hacer para las axn, entonces en el jflex, add las palrbas completas de las clase en la calse "calse_componente" xD, y aquí eli este NT y vuelve a coloca ren la producción en lugar de tipoComponente TIPOCLASE, puesto que por el cb en el jflex, englobará a la palabra completa... xD

cadena ::= ALFANUMERICO:texto cadena                                                            {:manejadorRespuestas.agregarAtributo("textoVisible", Token.parseToken(texto));:}
         | ALFANUMERICO:texto                                                                   {:manejadorRespuestas.agregarAtributo("textoVisible", Token.parseToken(texto));:}
         ;//una de las 2 saldrá como no se desea, es decir con el orden al revés del que lo ingresó el usuario, mas creo que esta será la que se tenga que arreglar, por ser recursi a la der... xD

items ::= ALFANUMERICO:opciones SEPARADOR items                                                 {:manejadorRespuestas.agregarAtributo("opciones", Token.parseToken(opciones));:}                          
        | ALFANUMERICO:opciones                                                                 {:manejadorRespuestas.agregarAtributo("opciones", Token.parseToken(opciones));:}
        ;//DEBES: revisar si los item llegan según como piensas, es decir del 1ro al último, por la recursi a la izq y porque yo pienso que como una f recursiva, cuando termine de llamarse, devolverá todo desde el último resultado hasta el primero... xD

SerieEliComp ::= serie_eli_comp SerieEliComp
                | serie_eli_comp
                ;

serie_eli_comp ::= APERTURALLAVE Param_Eli_Comp CIERRELLAVE                                     {:manejadorRespuestas.establecerTipoSolicitud("eliminarComponente");:}                
                 ;

Param_Eli_Comp ::= param_eli_comp COMA param_eli_comp
                 ;

param_eli_comp ::= COMILLA ID COMILLA DOSPUNTOS IDENTIFICADOR:id                                {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}                                    
                 | COMILLA FORMULARIO COMILLA DOSPUNTOS IDENTIFICADOR:formulario                {:manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));:}    
                 ;

SerieModifComp ::= serie_modif_comp SerieModifComp 
                  | serie_modif_comp
                  ;

serie_modif_comp ::= APERTURALLAVE Param_Modif_Comp CIERRELLAVE                                 {:manejadorRespuestas.establecerTipoSolicitud("modificarComponentes");:}                        
                   ;

Param_Modif_Comp ::= param_modif_comp COMA Param_Modif_Comp
                   | param_modif_comp COMA param_modif_comp
                   ;

param_modif_comp ::= param_add_comp                                                             
                   | COMILLA INDICE COMILLA DOSPUNTOS NUMERO:indice                             {:manejadorRespuestas.agregarAtributo("indice", Token.parseToken(indice));:}                           
                   ;

Serie_Consultas ::= APERTURALLAVE serie_consultas CIERRELLAVE
                  ;

serie_consultas ::= cuerpo_consultas COMA serie_consultas
                  | cuerpo_consultas
                  ;

cuerpo_consultas ::= COMILLA CONSULTA MENOS NUMERO DOSPUNTOS COMILLA bloque_sqf COMILLA
                   ;

bloque_sqf ::= SELECT TO FORM ASIGNAR identificacion cuerpo_consulta
             ;

identificacion ::= IDENTIFICADOR
                 | ALFANUMERICO
                 ;

cuerpo_consulta ::= APERTURAANGULAR seleccion CIERREANGULAR condicion
                  | APERTURAANGULAR CIERREANGULAR
                  ;

seleccion ::= ALFANUMERICO COMA seleccion
            | ALFANUMERICO
            ;

//Creo que con respecto a la produccion de la conidicón [o COndición xD, no recuerdo cual es exacatamente] habrá que cb la producción pues si no el orden en que el cliente especificó los elementos, no será el orden que visualice, es decir lo verá al revés o eso creo xD, revisa antes para afirmar o dicho con anterioridad xD

condicion ::= WHERE APERTURAANGULAR negacion comparacion Condicion
            ;

Condicion ::= logico comparacion Condicion
            | CIERREANGULAR
            ;

comparacion ::= IDENTIFICADOR relacional valor
              ;

negacion ::= NOT
           | 
           ;

logico ::= AND
         | OR
         | NOT
         ;
        
relacional ::= MENOR
             | MAYOR
             | IGUAL
             | DIFERENTE
             | MAYORIGUAL
             | MENORIGUAL
             ;

valor ::= NUMERO
        | ALFANUMERICO
        | FORMATOFECHA
        ;
