package DeskBackend.Analizadores;
import java_cup.runtime.*;

import DeskBackend.Entidades.EntidadError;
import DeskBackend.Entidades.Herramientas.ListaEnlazada;
import DeskBackend.Entidades.Manejadores.ManejadorArchivoRespuestaEntrada;
import DeskBackend.Entidades.Manejadores.ManejadorErrores;
import DeskBackend.Entidades.Token;

class Parser_Indigo;

parser code{:
    private ManejadorArchivoRespuestaEntrada manejadorRespuestas;    
    private ManejadorErrores manejadorErrores;

    public Parser_Indigo (Lexer lexer){//a menos que lo sobreescribas, no es necesario colocarlo, puesto que ya existe este cnstrc y además el lexer hereda de Scanner...
        super(lexer);                         
    }        

    public void estableceManejadorErrores(ManejadorErrores elManejadorErrores){
        manejadorErrores = elManejadorErrores;
        manejadorRespuestas = new ManejadorArchivoRespuestaEntrada(manejadorErrores);
    }

    protected int error_sync_size() {//este es para cb el # de tokens que el parser requiere para recuperarse de los errores
        return 1;
    }     

    public ListaEnlazada<EntidadError> darListadoErrores(){
        return manejadorErrores.darListadoErrores();
    }  
:}

terminal INI, SOLICITUD, SOLICITUDES, FIN;
terminal CREDENCIALES, PARAMETROS, CREAR, USUARIO, MODIFICAR, ELIMINAR, LOGIN, AGREGAR, COMPONENTE, NUEVO, FORMULARIO, TIPOREQUERIDO, ID, CAMPO, TEXTO, AREA, CLASE, INDICE, VISIBLE, ALINEACION, REQUERIDO, OPCIONES, FILAS, COLUMNAS, URL, PASSWORD, FECHA, CREACION, ANTIGUO, MODIFICACION, TITULO, NOMBRE, TEMA;
terminal GUIONBAJO, DOSPUNTOS, ASIGNAR, COMA, MENOS, APERTURAANGULAR, CIERREANGULAR, APERTURALLAVE, CIERRELLAVE, COMILLA, ADMIRACION, MAYOR, MENOR, IGUAL, DIFERENTE, MENORIGUAL, MAYORIGUAL;
terminal NUMERO, FORMATOFECHA, IDENTIFICADOR, ALFANUMERICO;//Recuerda que identificador es el nombre que reciben las "variables" e ID es la palabra reservada que indica que el valor del parámetro que se encontrara es un identificador xD
terminal TIPOTEMA;
terminal TIPOCLASE;
terminal TIPOALINEACION;
terminal CONSULTAR, DATOS, SELECT, TO, FORM, WHERE, CONSULTAS, CONSULTA, AND, OR, NOT;

non terminal p, cuerpo, Cuerpo, opciones, cierreOpciones, b_user, b_form, b_comp, b_sqf, SerieCreacionUser, serie_creacion, ParamCreacion, param_creacion, SerieModifUser, serie_modif_user, ParamModifUser, param_modif_user, SerieEliUser, serie_eli_user, param_eli, ParamLogin, param_login, SerieNuevoForm, serie_nuevo_form, Param_Nuevo_Form, param_nuevo_form, SerieEliForm, serie_eli_form, param_eli_form, SerieModifForm, serie_modif_form, Param_Modif_Form, param_modif_form, SerieAddComp, serie_add_comp, Param_Add_Comp, param_add_comp, tipoComponente, cadena, SerieEliComp, serie_eli_comp, Param_Eli_Comp, param_eli_comp, SerieModifComp, serie_modif_comp, Param_Modif_Comp, param_modif_comp, Serie_Consultas, serie_consultas, cuerpo_consultas, bloque_sqf, identificacion, cuerpo_consulta, seleccion, condicion, Condicion, comparacion, negacion, logico, relacional, valor;

/*precedencia? hasta donde sé no es necesario que incluya eso :v xD*/

start with p;

p ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUDES MAYOR cuerpo Cuerpo MENOR ADMIRACION FIN GUIONBAJO SOLICITUDES MAYOR                   {:manejadorRespuestas.finalizarArchivo();:}
    | cuerpo                                                                                                                            {:manejadorRespuestas.finalizarArchivo();:}
    ;

cuerpo ::= MENOR ADMIRACION INI GUIONBAJO SOLICITUD DOSPUNTOS opciones MENOR FIN GUIONBAJO SOLICITUD ADMIRACION MAYOR
        | error                                                                                                                         {:manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");:}
        ;

Cuerpo ::= Cuerpo cuerpo
         | cuerpo
         ;

opciones ::= COMILLA CREAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieCreacionUser cierreOpciones
           | COMILLA MODIFICAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieModifUser cierreOpciones
           | COMILLA ELIMINAR GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user SerieEliUser cierreOpciones
           | COMILLA LOGIN GUIONBAJO USUARIO COMILLA MAYOR APERTURALLAVE b_user ParamLogin cierreOpciones
           | COMILLA NUEVO GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieNuevoForm cierreOpciones
           | COMILLA ELIMINAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieEliForm cierreOpciones
           | COMILLA MODIFICAR GUIONBAJO FORMULARIO COMILLA MAYOR APERTURALLAVE b_form SerieModifForm cierreOpciones
           | COMILLA AGREGAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieAddComp cierreOpciones
           | COMILLA ELIMINAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieEliComp cierreOpciones
           | COMILLA MODIFICAR GUIONBAJO COMPONENTE COMILLA MAYOR APERTURALLAVE b_comp SerieModifComp cierreOpciones
           | COMILLA CONSULTAR GUIONBAJO DATOS COMILLA MAYOR APERTURALLAVE b_sqf CIERRELLAVE
           ;

cierreOpciones ::= CIERREANGULAR CIERRELLAVE
                ;

b_user ::= COMILLA CREDENCIALES GUIONBAJO USUARIO COMILLA DOSPUNTOS APERTURAANGULAR 
        ;
    
b_form ::= COMILLA PARAMETROS GUIONBAJO FORMULARIO COMILLA DOSPUNTOS APERTURAANGULAR
        ;

b_comp ::= COMILLA PARAMETROS GUIONBAJO COMPONENTE COMILLA DOSPUNTOS APERTURAANGULAR 
        ;

b_sqf ::= COMILLA CONSULTAS COMILLA MAYOR APERTURAANGULAR Serie_Consultas CIERREANGULAR
        ;

SerieCreacionUser ::= serie_creacion COMA SerieCreacionUser                              
                 | serie_creacion                 
                 ;

serie_creacion ::= APERTURALLAVE ParamCreacion CIERRELLAVE                                    {:manejadorRespuestas.establecerTipoSolicitud("creacionUsuario");:}
                 ;

ParamCreacion ::= param_creacion COMA param_creacion COMA param_creacion                    
                 | param_creacion COMA param_creacion
                 | error /*no se especificó el # atributos esperados...*/                     {:manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");:}
                 ;

param_creacion ::= param_login
                 | COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS COMILLA FORMATOFECHA: fecha COMILLA      {:manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));:}  
                 ;

SerieModifUser ::= serie_modif_user COMA SerieModifUser
                 | serie_modif_user
                 ;

serie_modif_user ::= APERTURALLAVE ParamModifUser CIERRELLAVE                                  {:manejadorRespuestas.establecerTipoSolicitud("modificacionUsuario");:}                
                   ;

ParamModifUser ::= param_modif_user COMA ParamModifUser
              | param_modif_user
              | error /*no se especificó el # atributos esperados...*/                         {:manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");:}
              ;

param_modif_user ::= COMILLA USUARIO GUIONBAJO ANTIGUO COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA  {:manejadorRespuestas.agregarAtributo("usuarioAntiguo", Token.parseToken(nombre));:}
              | COMILLA USUARIO GUIONBAJO NUEVO COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA         {:manejadorRespuestas.agregarAtributo("usuarioNuevo", Token.parseToken(nombre));:}   
              | COMILLA NUEVO GUIONBAJO PASSWORD COMILLA DOSPUNTOS COMILLA ALFANUMERICO:password COMILLA      {:manejadorRespuestas.agregarAtributo("nuevoPassword", Token.parseToken(password));:}
              | COMILLA FECHA GUIONBAJO MODIFICACION COMILLA DOSPUNTOS COMILLA FORMATOFECHA:fecha COMILLA     {:manejadorRespuestas.agregarAtributo("fechaModificacion", Token.parseToken(fecha));:}              
              ;

SerieEliUser ::= serie_eli_user COMA SerieEliUser
                | serie_eli_user
                ;

serie_eli_user ::= APERTURALLAVE param_eli CIERRELLAVE                                         {:manejadorRespuestas.establecerTipoSolicitud("eliminacionUsuario");:}                                          
                 | error /*faltó especificar el nombre usuario a eliminar*/                    {:manejadorErrores.establecerErrorHallado("atributoFaltante", "nombre usuario", "");:}
                 ;

param_eli ::= COMILLA USUARIO COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA            {:manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));:}            
            ;


ParamLogin ::= APERTURALLAVE param_login COMA param_login CIERRELLAVE                          {:manejadorRespuestas.establecerTipoSolicitud("loginUsuario");:}                                                                                  
             | error /*es necesario especificar el nombre de usuario y password...*/           {:manejadorErrores.establecerErrorHallado("atributosLoginFaltantes", "", "");:}
             ;

param_login ::= COMILLA USUARIO COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA          {:manejadorRespuestas.agregarAtributo("usuario", Token.parseToken(nombre));:}  
              | COMILLA PASSWORD COMILLA DOSPUNTOS COMILLA ALFANUMERICO:password COMILLA       {:manejadorRespuestas.agregarAtributo("password", Token.parseToken(password));:}
              ; 

SerieNuevoForm ::= serie_nuevo_form COMA SerieNuevoForm
                   | serie_nuevo_form                 
                   ;

serie_nuevo_form ::= APERTURALLAVE Param_Nuevo_Form CIERRELLAVE                                {:manejadorRespuestas.establecerTipoSolicitud("creacionFormulario");:}                                 
                    ;

Param_Nuevo_Form ::= param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form         
                   | param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form
                   | param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form COMA param_nuevo_form
                   | error /*no se especificó la cantidad de parámetros esperados...*/          {:manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");:}
                   ;

param_nuevo_form ::= COMILLA ID COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:id COMILLA                             {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}
                   | COMILLA TITULO COMILLA DOSPUNTOS COMILLA cadena COMILLA                                   {:manejadorRespuestas.agregarAtributo("titulo", null);:}/*elimine la var en el NT cadena, pero al parecer SI llegaba a recibir la info tal y como el ciclo del NT reunió juntando godas las partes...*/
                   | COMILLA NOMBRE COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA                      {:manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));:}
                   | COMILLA TEMA COMILLA DOSPUNTOS COMILLA TIPOTEMA:tema COMILLA                              {:manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));:}
                   | COMILLA USUARIO GUIONBAJO CREACION COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA  {:manejadorRespuestas.agregarAtributo("usuarioCreacion", Token.parseToken(nombre));:}
                   | COMILLA FECHA GUIONBAJO CREACION COMILLA DOSPUNTOS COMILLA FORMATOFECHA:fecha COMILLA     {:manejadorRespuestas.agregarAtributo("fechaCreacion", Token.parseToken(fecha));:}                     
                   ;

SerieEliForm ::= serie_eli_form COMA SerieEliForm
                | serie_eli_form               
                ;

serie_eli_form ::= APERTURALLAVE param_eli_form CIERRELLAVE                                     {:manejadorRespuestas.establecerTipoSolicitud("eliminacionFormulario");:}                                    
                 | error /*Es necesario especificar el ID del formulario a eliminar ...*/       {:manejadorErrores.establecerErrorHallado("atributoFaltante", "ID del formulario", "");:}
                 ;

param_eli_form ::= COMILLA ID COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:id COMILLA                {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}                   
                ;   

SerieModifForm ::= serie_modif_form COMA SerieModifForm
                  | serie_modif_form                  
                  ;

serie_modif_form ::= APERTURALLAVE Param_Modif_Form CIERRELLAVE                                 {:manejadorRespuestas.establecerTipoSolicitud("modificacionFormulario");:}                                            
                   ;
        
Param_Modif_Form ::= param_modif_form COMA param_modif_form COMA param_modif_form COMA param_modif_form
                   | param_modif_form COMA param_modif_form COMA param_modif_form
                   | param_modif_form COMA param_modif_form                   
                   | error /*no se especificó el # de atribs esperados...*/                   {:manejadorErrores.establecerErrorHallado("atributosInsuficientes", "", "");:}
                   ;

param_modif_form ::= COMILLA ID COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:id COMILLA                             {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}       
                   | COMILLA TITULO COMILLA DOSPUNTOS COMILLA cadena COMILLA                                   {:manejadorRespuestas.agregarAtributo("titulo", null);:}       
                   | COMILLA NOMBRE COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA                      {:manejadorRespuestas.agregarAtributo("nombre", Token.parseToken(nombre));:}       
                   | COMILLA TEMA COMILLA DOSPUNTOS COMILLA TIPOTEMA:tema COMILLA                              {:manejadorRespuestas.agregarAtributo("tema", Token.parseToken(tema));:}      
                   ;

SerieAddComp ::= serie_add_comp COMA SerieAddComp
                | serie_add_comp                
                ;

serie_add_comp ::= APERTURALLAVE Param_Add_Comp CIERRELLAVE                                     {:manejadorRespuestas.establecerTipoSolicitud("agregarComponentes");:}                    
                 ;

Param_Add_Comp ::= param_add_comp COMA Param_Add_Comp
                 | param_add_comp COMA param_add_comp COMA param_add_comp COMA param_add_comp
                 | error /*No puedes especificar menos atributos de los que requiere un botón*/ {:manejadorErrores.establecerErrorHallado("atribsFaltantesAddComp", "", "");:}
                 ;

param_add_comp ::= COMILLA ID COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:id COMILLA                               {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}                          
                 | COMILLA NOMBRE GUIONBAJO CAMPO COMILLA DOSPUNTOS COMILLA ALFANUMERICO:nombre COMILLA        {:manejadorRespuestas.agregarAtributo("nombreCampo", Token.parseToken(nombre));:}      
                 | COMILLA FORMULARIO COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:formulario COMILLA               {:manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));:}      
                 | COMILLA CLASE COMILLA DOSPUNTOS COMILLA tipoComponente COMILLA                        
                 | COMILLA TEXTO GUIONBAJO VISIBLE COMILLA DOSPUNTOS COMILLA cadena:texto COMILLA              {:manejadorRespuestas.agregarAtributo("textoVisible", null);:}/*como en esta parte lo que interesa es el nombre y no el token... xD*/
                 | COMILLA ALINEACION COMILLA DOSPUNTOS COMILLA TIPOALINEACION:alineacion COMILLA              {:manejadorRespuestas.agregarAtributo("alineacion", Token.parseToken(alineacion));:}       
                 | COMILLA REQUERIDO COMILLA DOSPUNTOS COMILLA TIPOREQUERIDO:requerimiento COMILLA             {:manejadorRespuestas.agregarAtributo("requerido", Token.parseToken(requerimiento));:}       
                 | COMILLA OPCIONES COMILLA DOSPUNTOS COMILLA cadena COMILLA                                   {:manejadorRespuestas.agregarAtributo("opciones", null);:}              
                 | COMILLA FILAS COMILLA DOSPUNTOS COMILLA NUMERO:filas COMILLA                                {:manejadorRespuestas.agregarAtributo("filas", Token.parseToken(filas));:}         
                 | COMILLA COLUMNAS COMILLA DOSPUNTOS COMILLA NUMERO:columnas COMILLA                          {:manejadorRespuestas.agregarAtributo("columnas", Token.parseToken(columnas));:}     
                 | COMILLA URL COMILLA DOSPUNTOS COMILLA ALFANUMERICO:url COMILLA               {:manejadorRespuestas.agregarAtributo("URL", Token.parseToken(url));:}                       
                 ;

tipoComponente ::= TIPOCLASE:tipo                                                               {:manejadorRespuestas.agregarAtributo("clase", Token.parseToken(tipo));:}       
                 | CAMPO:elemento GUIONBAJO TEXTO                                               {:Token.parseToken(elemento).reestablecerLexema("CAMPO_TEXTO");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));:}    
                 | AREA:elemento GUIONBAJO TEXTO                                                {:Token.parseToken(elemento).reestablecerLexema("AREA_TEXTO");
                                                                                                  manejadorRespuestas.agregarAtributo("clase", Token.parseToken(elemento));:}    
                 ;//NOTA[pero no da problemas xD]: si hacer esto te diera problemas con lo que habías pensado hacer para las axn, entonces en el jflex, add las palrbas completas de las clase en la calse "calse_componente" xD, y aquí eli este NT y vuelve a coloca ren la producción en lugar de tipoComponente TIPOCLASE, puesto que por el cb en el jflex, englobará a la palabra completa... xD

cadena ::= cadena ALFANUMERICO:texto                                                             {:manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));:}
         | cadena NUMERO:texto                                                                   {:manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));:}
         | cadena FORMATOFECHA:texto                                                             {:manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));:}
         | ALFANUMERICO:texto                                                                    {:manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));:}
         | NUMERO: texto                                                                         {:manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));:}
         | FORMATOFECHA:texto                                                                    {:manejadorRespuestas.agregarAtributo("", Token.parseToken(texto));:}
         ;//una de las 2 saldrá como no se desea, es decir con el orden al revés del que lo ingresó el usuario, mas creo que esta será la que se tenga que arreglar, por ser recursi a la der... xD

SerieEliComp ::= serie_eli_comp COMA SerieEliComp
                | serie_eli_comp                
                ;

serie_eli_comp ::= APERTURALLAVE Param_Eli_Comp CIERRELLAVE                                     {:manejadorRespuestas.establecerTipoSolicitud("eliminarComponente");:}                
                 ;

Param_Eli_Comp ::= param_eli_comp COMA param_eli_comp
                 | error /*se esperaba id del componente y del formulario a eliminar ...*/     {:manejadorErrores.establecerErrorHallado("atributoFaltante", "id del componente y del formulario", "");:}
                 ;

param_eli_comp ::= COMILLA ID COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:id COMILLA                               {:manejadorRespuestas.agregarAtributo("id", Token.parseToken(id));:}                                    
                 | COMILLA FORMULARIO COMILLA DOSPUNTOS COMILLA IDENTIFICADOR:formulario COMILLA               {:manejadorRespuestas.agregarAtributo("formulario", Token.parseToken(formulario));:}    
                 ;

SerieModifComp ::= serie_modif_comp COMA SerieModifComp 
                  | serie_modif_comp                  
                  ;

serie_modif_comp ::= APERTURALLAVE Param_Modif_Comp CIERRELLAVE                                 {:manejadorRespuestas.establecerTipoSolicitud("modificarComponentes");:}                        
                   ;

Param_Modif_Comp ::= param_modif_comp COMA Param_Modif_Comp
                   | param_modif_comp COMA param_modif_comp COMA param_modif_comp
                   | error /*Al menos debes especificar el IDComp, IDForm y un atributo a modificar*/ {:manejadorErrores.establecerErrorHallado("atribsFaltantesModifComp", "", "");:}
                   ;

param_modif_comp ::= param_add_comp                                                             
                   | COMILLA INDICE COMILLA DOSPUNTOS COMILLA NUMERO:indice COMILLA                            {:manejadorRespuestas.agregarAtributo("indice", Token.parseToken(indice));:}                           
                   ;

Serie_Consultas ::= APERTURALLAVE serie_consultas CIERRELLAVE
                  ;

serie_consultas ::= cuerpo_consultas COMA serie_consultas
                  | cuerpo_consultas
                  ;

cuerpo_consultas ::= COMILLA CONSULTA MENOS NUMERO DOSPUNTOS COMILLA bloque_sqf COMILLA
                   ;

bloque_sqf ::= SELECT TO FORM ASIGNAR identificacion cuerpo_consulta
             ;

identificacion ::= IDENTIFICADOR
                 | ALFANUMERICO
                 ;

cuerpo_consulta ::= APERTURAANGULAR seleccion CIERREANGULAR condicion
                  | APERTURAANGULAR CIERREANGULAR
                  ;

seleccion ::= ALFANUMERICO COMA seleccion
            | ALFANUMERICO
            ;

//Creo que con respecto a la produccion de la conidicón [o COndición xD, no recuerdo cual es exacatamente] habrá que cb la producción pues si no el orden en que el cliente especificó los elementos, no será el orden que visualice, es decir lo verá al revés o eso creo xD, revisa antes para afirmar o dicho con anterioridad xD

condicion ::= WHERE APERTURAANGULAR negacion comparacion Condicion
            ;

Condicion ::= logico comparacion Condicion
            | CIERREANGULAR
            ;

comparacion ::= IDENTIFICADOR relacional valor
              ;/*Según lo que veo en la gramática, debe ser el nombre del campo y no el identificador, puesto que NO inicia con $ en el ejemplo... xD*/

negacion ::= NOT
           | 
           ;

logico ::= AND
         | OR
         | NOT
         ;
        
relacional ::= MENOR
             | MAYOR
             | IGUAL
             | DIFERENTE
             | MAYORIGUAL
             | MENORIGUAL
             ;

valor ::= NUMERO
        | COMILLA ALFANUMERICO COMILLA
        | COMILLA FORMATOFECHA COMILLA
        ;
