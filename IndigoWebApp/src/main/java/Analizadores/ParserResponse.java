
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserResponse extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserResponseSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserResponse() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserResponse(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserResponse(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\103\000\002\002\004\000\002\002\020\000\002\002" +
    "\003\000\002\003\017\000\002\004\004\000\002\004\003" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\006\004\000\002\006\003\000\002\007\003" +
    "\000\002\007\007\000\002\010\004\000\002\010\003\000" +
    "\002\011\007\000\002\011\007\000\002\011\007\000\002" +
    "\011\007\000\002\012\005\000\002\013\004\000\002\014" +
    "\005\000\002\014\005\000\002\015\004\000\002\015\003" +
    "\000\002\016\005\000\002\016\005\000\002\016\005\000" +
    "\002\016\005\000\002\016\007\000\002\016\007\000\002" +
    "\017\005\000\002\020\004\000\002\020\003\000\002\021" +
    "\005\000\002\021\005\000\002\021\005\000\002\021\005" +
    "\000\002\022\004\000\002\022\003\000\002\023\005\000" +
    "\002\023\007\000\002\023\005\000\002\023\005\000\002" +
    "\023\007\000\002\023\005\000\002\023\005\000\002\023" +
    "\005\000\002\023\005\000\002\023\005\000\002\023\005" +
    "\000\002\024\004\000\002\024\003\000\002\025\004\000" +
    "\002\026\005\000\002\026\005\000\002\027\004\000\002" +
    "\027\003\000\002\030\003\000\002\030\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\321\000\004\056\005\001\002\000\004\002\uffff\001" +
    "\002\000\004\054\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\004\011\001\002\000" +
    "\004\051\012\001\002\000\006\005\013\006\014\001\002" +
    "\000\004\052\034\001\002\000\004\055\015\001\002\000" +
    "\004\056\017\001\002\000\004\056\017\001\002\000\004" +
    "\054\020\001\002\000\004\004\021\001\002\000\004\051" +
    "\022\001\002\000\004\005\013\001\002\000\004\056\ufffc" +
    "\001\002\000\004\056\026\001\002\000\004\056\ufffd\001" +
    "\002\000\004\054\027\001\002\000\006\004\021\007\030" +
    "\001\002\000\004\051\031\001\002\000\004\006\032\001" +
    "\002\000\004\055\033\001\002\000\004\002\000\001\002" +
    "\000\004\053\035\001\002\000\026\010\051\011\052\012" +
    "\046\013\045\014\050\015\056\016\047\017\055\020\054" +
    "\021\053\001\002\000\004\056\037\001\002\000\004\007" +
    "\040\001\002\000\004\051\041\001\002\000\004\005\042" +
    "\001\002\000\004\054\043\001\002\000\004\055\044\001" +
    "\002\000\006\002\ufffe\056\ufffe\001\002\000\004\053\317" +
    "\001\002\000\004\053\311\001\002\000\004\053\270\001" +
    "\002\000\004\053\235\001\002\000\004\053\214\001\002" +
    "\000\004\053\165\001\002\000\004\053\154\001\002\000" +
    "\004\053\141\001\002\000\004\053\065\001\002\000\004" +
    "\053\057\001\002\000\004\055\060\001\002\000\004\025" +
    "\061\001\002\000\004\052\063\001\002\000\004\056\ufff6" +
    "\001\002\000\004\057\064\001\002\000\004\056\uffdb\001" +
    "\002\000\004\055\066\001\002\000\030\024\072\025\076" +
    "\027\070\030\075\033\100\034\073\035\071\036\067\037" +
    "\074\040\077\047\101\001\002\000\004\052\137\001\002" +
    "\000\004\051\133\001\002\000\004\052\127\001\002\000" +
    "\004\052\125\001\002\000\004\052\123\001\002\000\004" +
    "\052\121\001\002\000\004\052\117\001\002\000\004\052" +
    "\115\001\002\000\004\052\113\001\002\000\004\052\111" +
    "\001\002\000\004\051\105\001\002\000\032\024\072\025" +
    "\076\027\070\030\075\033\100\034\073\035\071\036\067" +
    "\037\074\040\077\047\101\056\uffd3\001\002\000\004\056" +
    "\ufff4\001\002\000\004\056\uffd4\001\002\000\004\026\106" +
    "\001\002\000\004\052\107\001\002\000\004\057\110\001" +
    "\002\000\034\024\uffd1\025\uffd1\027\uffd1\030\uffd1\031\uffd1" +
    "\033\uffd1\034\uffd1\035\uffd1\036\uffd1\037\uffd1\040\uffd1\047" +
    "\uffd1\056\uffd1\001\002\000\004\057\112\001\002\000\034" +
    "\024\uffcd\025\uffcd\027\uffcd\030\uffcd\031\uffcd\033\uffcd\034" +
    "\uffcd\035\uffcd\036\uffcd\037\uffcd\040\uffcd\047\uffcd\056\uffcd" +
    "\001\002\000\004\057\114\001\002\000\034\024\uffc8\025" +
    "\uffc8\027\uffc8\030\uffc8\031\uffc8\033\uffc8\034\uffc8\035\uffc8" +
    "\036\uffc8\037\uffc8\040\uffc8\047\uffc8\056\uffc8\001\002\000" +
    "\004\057\116\001\002\000\034\024\uffd2\025\uffd2\027\uffd2" +
    "\030\uffd2\031\uffd2\033\uffd2\034\uffd2\035\uffd2\036\uffd2\037" +
    "\uffd2\040\uffd2\047\uffd2\056\uffd2\001\002\000\004\057\120" +
    "\001\002\000\034\024\uffcf\025\uffcf\027\uffcf\030\uffcf\031" +
    "\uffcf\033\uffcf\034\uffcf\035\uffcf\036\uffcf\037\uffcf\040\uffcf" +
    "\047\uffcf\056\uffcf\001\002\000\004\057\122\001\002\000" +
    "\034\024\uffc9\025\uffc9\027\uffc9\030\uffc9\031\uffc9\033\uffc9" +
    "\034\uffc9\035\uffc9\036\uffc9\037\uffc9\040\uffc9\047\uffc9\056" +
    "\uffc9\001\002\000\004\057\124\001\002\000\034\024\uffcc" +
    "\025\uffcc\027\uffcc\030\uffcc\031\uffcc\033\uffcc\034\uffcc\035" +
    "\uffcc\036\uffcc\037\uffcc\040\uffcc\047\uffcc\056\uffcc\001\002" +
    "\000\004\057\126\001\002\000\034\024\uffd0\025\uffd0\027" +
    "\uffd0\030\uffd0\031\uffd0\033\uffd0\034\uffd0\035\uffd0\036\uffd0" +
    "\037\uffd0\040\uffd0\047\uffd0\056\uffd0\001\002\000\004\057" +
    "\131\001\002\000\036\024\uffcb\025\uffcb\027\uffcb\030\uffcb" +
    "\031\uffcb\033\uffcb\034\uffcb\035\uffcb\036\uffcb\037\uffcb\040" +
    "\uffcb\047\uffcb\056\uffcb\057\132\001\002\000\046\022\uffc6" +
    "\024\uffc6\025\uffc6\027\uffc6\030\uffc6\031\uffc6\033\uffc6\034" +
    "\uffc6\035\uffc6\036\uffc6\037\uffc6\040\uffc6\042\uffc6\046\uffc6" +
    "\047\uffc6\050\uffc6\056\uffc6\057\uffc6\001\002\000\046\022" +
    "\uffc7\024\uffc7\025\uffc7\027\uffc7\030\uffc7\031\uffc7\033\uffc7" +
    "\034\uffc7\035\uffc7\036\uffc7\037\uffc7\040\uffc7\042\uffc7\046" +
    "\uffc7\047\uffc7\050\uffc7\056\uffc7\057\uffc7\001\002\000\004" +
    "\032\134\001\002\000\004\052\135\001\002\000\004\057" +
    "\131\001\002\000\036\024\uffce\025\uffce\027\uffce\030\uffce" +
    "\031\uffce\033\uffce\034\uffce\035\uffce\036\uffce\037\uffce\040" +
    "\uffce\047\uffce\056\uffce\057\132\001\002\000\004\057\140" +
    "\001\002\000\034\024\uffca\025\uffca\027\uffca\030\uffca\031" +
    "\uffca\033\uffca\034\uffca\035\uffca\036\uffca\037\uffca\040\uffca" +
    "\047\uffca\056\uffca\001\002\000\004\055\142\001\002\000" +
    "\006\024\144\025\143\001\002\000\004\052\152\001\002" +
    "\000\004\052\150\001\002\000\006\024\144\025\143\001" +
    "\002\000\004\056\ufff3\001\002\000\004\056\uffc5\001\002" +
    "\000\004\057\151\001\002\000\010\024\uffc3\025\uffc3\056" +
    "\uffc3\001\002\000\004\057\153\001\002\000\010\024\uffc4" +
    "\025\uffc4\056\uffc4\001\002\000\004\055\155\001\002\000" +
    "\032\024\072\025\076\027\070\030\075\031\160\033\100" +
    "\034\073\035\071\036\067\037\074\040\077\047\101\001" +
    "\002\000\034\024\072\025\076\027\070\030\075\031\160" +
    "\033\100\034\073\035\071\036\067\037\074\040\077\047" +
    "\101\056\uffc1\001\002\000\004\056\ufff2\001\002\000\004" +
    "\052\162\001\002\000\034\024\uffc0\025\uffc0\027\uffc0\030" +
    "\uffc0\031\uffc0\033\uffc0\034\uffc0\035\uffc0\036\uffc0\037\uffc0" +
    "\040\uffc0\047\uffc0\056\uffc0\001\002\000\004\057\163\001" +
    "\002\000\034\024\uffbf\025\uffbf\027\uffbf\030\uffbf\031\uffbf" +
    "\033\uffbf\034\uffbf\035\uffbf\036\uffbf\037\uffbf\040\uffbf\047" +
    "\uffbf\056\uffbf\001\002\000\004\056\uffc2\001\002\000\004" +
    "\055\166\001\002\000\010\022\170\023\172\042\167\001" +
    "\002\000\004\051\210\001\002\000\004\051\201\001\002" +
    "\000\004\056\ufffa\001\002\000\004\051\175\001\002\000" +
    "\012\022\170\023\172\042\167\056\uffec\001\002\000\004" +
    "\056\uffed\001\002\000\004\041\176\001\002\000\004\052" +
    "\177\001\002\000\004\057\200\001\002\000\012\022\uffe9" +
    "\023\uffe9\042\uffe9\056\uffe9\001\002\000\006\023\202\044" +
    "\203\001\002\000\004\052\206\001\002\000\004\052\204" +
    "\001\002\000\004\057\205\001\002\000\012\022\uffeb\023" +
    "\uffeb\042\uffeb\056\uffeb\001\002\000\004\057\207\001\002" +
    "\000\012\022\uffea\023\uffea\042\uffea\056\uffea\001\002\000" +
    "\004\045\211\001\002\000\004\052\212\001\002\000\004" +
    "\057\213\001\002\000\012\022\uffe8\023\uffe8\042\uffe8\056" +
    "\uffe8\001\002\000\004\055\215\001\002\000\010\022\217" +
    "\041\223\042\216\001\002\000\004\051\231\001\002\000" +
    "\004\052\227\001\002\000\012\022\uffef\041\uffef\042\uffef" +
    "\056\uffef\001\002\000\012\022\217\041\223\042\216\056" +
    "\ufff0\001\002\000\004\056\ufffb\001\002\000\004\052\224" +
    "\001\002\000\004\057\225\001\002\000\012\022\uffe4\041" +
    "\uffe4\042\uffe4\056\uffe4\001\002\000\004\056\ufff1\001\002" +
    "\000\004\057\230\001\002\000\012\022\uffe5\041\uffe5\042" +
    "\uffe5\056\uffe5\001\002\000\004\043\232\001\002\000\004" +
    "\052\233\001\002\000\004\057\234\001\002\000\012\022" +
    "\uffee\041\uffee\042\uffee\056\uffee\001\002\000\004\055\236" +
    "\001\002\000\016\022\244\025\237\042\243\046\241\047" +
    "\246\050\240\001\002\000\004\052\266\001\002\000\004" +
    "\052\264\001\002\000\004\052\262\001\002\000\004\056" +
    "\ufff7\001\002\000\004\051\256\001\002\000\004\051\252" +
    "\001\002\000\020\022\244\025\237\042\243\046\241\047" +
    "\246\050\240\056\uffe2\001\002\000\004\052\247\001\002" +
    "\000\004\057\250\001\002\000\020\022\uffdf\025\uffdf\042" +
    "\uffdf\046\uffdf\047\uffdf\050\uffdf\056\uffdf\001\002\000\004" +
    "\056\uffe3\001\002\000\004\043\253\001\002\000\004\052" +
    "\254\001\002\000\004\057\255\001\002\000\020\022\uffdd" +
    "\025\uffdd\042\uffdd\046\uffdd\047\uffdd\050\uffdd\056\uffdd\001" +
    "\002\000\004\043\257\001\002\000\004\052\260\001\002" +
    "\000\004\057\261\001\002\000\020\022\uffdc\025\uffdc\042" +
    "\uffdc\046\uffdc\047\uffdc\050\uffdc\056\uffdc\001\002\000\004" +
    "\057\131\001\002\000\022\022\uffe0\025\uffe0\042\uffe0\046" +
    "\uffe0\047\uffe0\050\uffe0\056\uffe0\057\132\001\002\000\004" +
    "\057\265\001\002\000\020\022\uffde\025\uffde\042\uffde\046" +
    "\uffde\047\uffde\050\uffde\056\uffde\001\002\000\004\057\267" +
    "\001\002\000\020\022\uffe1\025\uffe1\042\uffe1\046\uffe1\047" +
    "\uffe1\050\uffe1\056\uffe1\001\002\000\004\055\271\001\002" +
    "\000\012\025\273\046\274\047\276\050\272\001\002\000" +
    "\004\052\307\001\002\000\004\052\305\001\002\000\004" +
    "\052\303\001\002\000\014\025\273\046\274\047\276\050" +
    "\272\056\uffd9\001\002\000\004\052\300\001\002\000\004" +
    "\056\ufff5\001\002\000\004\057\301\001\002\000\014\025" +
    "\uffd6\046\uffd6\047\uffd6\050\uffd6\056\uffd6\001\002\000\004" +
    "\056\uffda\001\002\000\004\057\131\001\002\000\016\025" +
    "\uffd7\046\uffd7\047\uffd7\050\uffd7\056\uffd7\057\132\001\002" +
    "\000\004\057\306\001\002\000\014\025\uffd8\046\uffd8\047" +
    "\uffd8\050\uffd8\056\uffd8\001\002\000\004\057\310\001\002" +
    "\000\014\025\uffd5\046\uffd5\047\uffd5\050\uffd5\056\uffd5\001" +
    "\002\000\004\055\312\001\002\000\004\022\314\001\002" +
    "\000\004\056\ufff9\001\002\000\004\052\315\001\002\000" +
    "\004\057\316\001\002\000\004\056\uffe7\001\002\000\004" +
    "\055\320\001\002\000\006\022\217\041\223\001\002\000" +
    "\004\056\ufff8\001\002\000\006\022\217\041\223\001\002" +
    "\000\004\056\uffe6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\321\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\015\001\001" +
    "\000\006\003\022\004\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\024\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\005" +
    "\035\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\061\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\022\102\023\101\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\022\103\023\101\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\127\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\025\145\026\144" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\026" +
    "\146\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\023\160\027\156\030\155" +
    "\001\001\000\010\023\160\027\163\030\155\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\010\170\011\172\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\010\173\011\172\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\006" +
    "\221\007\220\014\217\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\006\225\007\220\014" +
    "\217\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\241\016\244\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\250\016\244\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\024\262" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\020\276\021\274\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\020\301\021\274" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\024\303" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\012\312\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\013\320\014\321\001\001\000\002\001\001\000" +
    "\004\014\322\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserResponse$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserResponse$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserResponse$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  
    public ParserResponse (LexerResponse lexer){//a menos que lo sobreescribas, no es necesario colocarlo, puesto que ya existe este cnstrc y además el lexer hereda de Scanner...
        super(lexer);                         
    }        

    protected int error_sync_size() {//este es para cb el # de tokens que el parser requiere para recuperarse de los errores
        return 1;
    }     


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserResponse$actions {
  private final ParserResponse parser;

  /** Constructor */
  CUP$ParserResponse$actions(ParserResponse parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserResponse$do_action_part00000000(
    int                        CUP$ParserResponse$act_num,
    java_cup.runtime.lr_parser CUP$ParserResponse$parser,
    java.util.Stack            CUP$ParserResponse$stack,
    int                        CUP$ParserResponse$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserResponse$result;

      /* select the action based on the action number */
      switch (CUP$ParserResponse$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= p EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)).value;
		RESULT = start_val;
              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserResponse$parser.done_parsing();
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // p ::= MENOR ADMIRACION INI GUIONBAJO RESPUESTAS MAYOR cuerpo Cuerpo MENOR ADMIRACION FIN GUIONBAJO RESPUESTAS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-13)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // p ::= cuerpo 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("p",0, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo ::= MENOR ADMIRACION INI GUIONBAJO RESPUESTA DOSPUNTOS opciones MENOR FIN GUIONBAJO RESPUESTA ADMIRACION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("cuerpo",1, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-12)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Cuerpo ::= Cuerpo cuerpo 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Cuerpo ::= cuerpo 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Cuerpo",2, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // opciones ::= COMILLA CREACIONUSER COMILLA MAYOR ParamCreacion 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // opciones ::= COMILLA MODIFICACIONUSER COMILLA MAYOR ParamModifUser 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // opciones ::= COMILLA ELIMINACIONUSER COMILLA MAYOR param_eli 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // opciones ::= COMILLA LOGINUSER COMILLA MAYOR ParamLogin 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // opciones ::= COMILLA CREACIONFORM COMILLA MAYOR Param_Nuevo_Form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // opciones ::= COMILLA ELIMINACIONFORM COMILLA MAYOR param_eli_form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // opciones ::= COMILLA MODIFICACIONFORM COMILLA MAYOR Param_Modif_Form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // opciones ::= COMILLA ADDCOMPS COMILLA MAYOR Param_Add_Comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // opciones ::= COMILLA ELICOMP COMILLA MAYOR Param_Eli_Comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // opciones ::= COMILLA MODIFCOMP COMILLA MAYOR Param_Modif_Comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("opciones",3, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ParamCreacion ::= param_creacion ParamCreacion 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("ParamCreacion",4, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ParamCreacion ::= param_creacion 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("ParamCreacion",4, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // param_creacion ::= param_login 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_creacion",5, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // param_creacion ::= FECHA GUIONBAJO CREACION DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_creacion",5, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ParamModifUser ::= param_modif_user ParamModifUser 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("ParamModifUser",6, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ParamModifUser ::= param_modif_user 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("ParamModifUser",6, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // param_modif_user ::= USUARIO GUIONBAJO ANTIGUO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_user",7, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // param_modif_user ::= USUARIO GUIONBAJO NUEVO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_user",7, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // param_modif_user ::= NUEVO GUIONBAJO PASSWORD DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int passwordleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int passwordright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object password = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_user",7, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // param_modif_user ::= FECHA GUIONBAJO MODIFICACION DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_user",7, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // param_eli ::= USUARIO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_eli",8, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ParamLogin ::= param_login param_login 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("ParamLogin",9, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // param_login ::= USUARIO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_login",10, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // param_login ::= PASSWORD DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int passwordleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int passwordright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object password = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_login",10, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Param_Nuevo_Form ::= param_nuevo_form Param_Nuevo_Form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",11, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Param_Nuevo_Form ::= param_nuevo_form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Nuevo_Form",11, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // param_nuevo_form ::= ID DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",12, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // param_nuevo_form ::= TITULO DOSPUNTOS cadena 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",12, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // param_nuevo_form ::= NOMBRE DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",12, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // param_nuevo_form ::= TEMA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int temaleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int temaright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object tema = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",12, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // param_nuevo_form ::= USUARIO GUIONBAJO CREACION DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",12, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // param_nuevo_form ::= FECHA GUIONBAJO CREACION DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int fechaleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int fecharight = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object fecha = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_nuevo_form",12, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // param_eli_form ::= ID DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_eli_form",13, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Param_Modif_Form ::= param_modif_form Param_Modif_Form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",14, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Param_Modif_Form ::= param_modif_form 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Modif_Form",14, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // param_modif_form ::= ID DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_form",15, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // param_modif_form ::= TITULO DOSPUNTOS cadena 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_form",15, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // param_modif_form ::= NOMBRE DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_form",15, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // param_modif_form ::= TEMA DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int temaleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int temaright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object tema = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_form",15, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Param_Add_Comp ::= param_add_comp Param_Add_Comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",16, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Param_Add_Comp ::= param_add_comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Add_Comp",16, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // param_add_comp ::= ID DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // param_add_comp ::= NOMBRE GUIONBAJO CAMPO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int nombreleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int nombreright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object nombre = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // param_add_comp ::= FORMULARIO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int formularioleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int formularioright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object formulario = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // param_add_comp ::= CLASE DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int tipoComponenteleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int tipoComponenteright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object tipoComponente = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // param_add_comp ::= TEXTO GUIONBAJO VISIBLE DOSPUNTOS cadena 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-4)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // param_add_comp ::= ALINEACION DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int alineacionleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int alineacionright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object alineacion = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // param_add_comp ::= REQUERIDO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int requerimientoleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int requerimientoright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object requerimiento = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // param_add_comp ::= OPCIONES DOSPUNTOS cadena 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // param_add_comp ::= FILAS DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int filasleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int filasright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object filas = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // param_add_comp ::= COLUMNAS DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int columnasleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int columnasright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object columnas = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // param_add_comp ::= URL DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int urlleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int urlright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object url = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_add_comp",17, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // cadena ::= cadena ALFANUMERICO 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("cadena",18, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // cadena ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int textoleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("cadena",18, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Param_Eli_Comp ::= param_eli_comp param_eli_comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Eli_Comp",19, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // param_eli_comp ::= ID DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_eli_comp",20, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // param_eli_comp ::= FORMULARIO DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int formularioleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int formularioright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object formulario = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_eli_comp",20, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Param_Modif_Comp ::= param_modif_comp Param_Modif_Comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",21, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-1)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Param_Modif_Comp ::= param_modif_comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("Param_Modif_Comp",21, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // param_modif_comp ::= param_add_comp 
            {
              Object RESULT =null;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_comp",22, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // param_modif_comp ::= INDICE DOSPUNTOS ALFANUMERICO 
            {
              Object RESULT =null;
		int indiceleft = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).left;
		int indiceright = ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()).right;
		Object indice = (Object)((java_cup.runtime.Symbol) CUP$ParserResponse$stack.peek()).value;

              CUP$ParserResponse$result = parser.getSymbolFactory().newSymbol("param_modif_comp",22, ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.elementAt(CUP$ParserResponse$top-2)), ((java_cup.runtime.Symbol)CUP$ParserResponse$stack.peek()), RESULT);
            }
          return CUP$ParserResponse$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserResponse$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserResponse$do_action(
    int                        CUP$ParserResponse$act_num,
    java_cup.runtime.lr_parser CUP$ParserResponse$parser,
    java.util.Stack            CUP$ParserResponse$stack,
    int                        CUP$ParserResponse$top)
    throws java.lang.Exception
    {
              return CUP$ParserResponse$do_action_part00000000(
                               CUP$ParserResponse$act_num,
                               CUP$ParserResponse$parser,
                               CUP$ParserResponse$stack,
                               CUP$ParserResponse$top);
    }
}

}
